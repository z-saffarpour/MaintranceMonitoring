{
  "name": "SemanticModel",
  "compatibilityLevel": 1200,
  "model": {
    "culture": "en-US",
    "dataSources": [
      {
        "name": "OLE-Monitor_MaintranceMonitoring",
        "connectionString": "Data Source=SRV70001\\NODE;Persist Security Info=false;Integrated Security=SSPI;Initial Catalog=MaintranceMonitoring;Application Name=SSAS-SqlDeep_MaintranceMonitoring;Provider=SQLNCLI11",
        "impersonationMode": "impersonateServiceAccount",
        "annotations": [
          {
            "name": "ConnectionEditUISource",
            "value": "SqlServer"
          }
        ]
      }
    ],
    "tables": [
      {
        "name": "Branch",
        "columns": [
          {
            "name": "ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID",
            "sourceProviderType": "Integer"
          },
          {
            "name": "common_BranchTypeRef",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "common_BranchTypeRef",
            "sourceProviderType": "Integer"
          },
          {
            "name": "BranchName",
            "dataType": "string",
            "sourceColumn": "BranchName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "BranchNumber",
            "dataType": "string",
            "sourceColumn": "BranchNumber",
            "sourceProviderType": "Char"
          },
          {
            "name": "BranchSiteId",
            "dataType": "string",
            "sourceColumn": "BranchSiteId"
          }
        ],
        "partitions": [
          {
            "name": "Branch",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT ID,",
                "       common_BranchTypeRef,",
                "       CONCAT( REPLICATE( '0', 3 - LEN( RegionNo )), RegionNo ) AS BranchSiteId,",
                "       BranchName,",
                "       BranchNumber",
                "FROM [Common].[Branch] WITH (READPAST)",
                "WHERE Enabled = 1"
              ],
              "dataSource": "OLE-Monitor_MaintranceMonitoring"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ID,",
                  "       common_BranchTypeRef,",
                  "       CONCAT( REPLICATE( '0', 3 - LEN( RegionNo )), RegionNo ) AS BranchSiteId,",
                  "       BranchName,",
                  "       BranchNumber",
                  "FROM [Common].[Branch] WITH (READPAST)",
                  "WHERE Enabled = 1</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT ID,",
              "       common_BranchTypeRef,",
              "       CONCAT( REPLICATE( '0', 3 - LEN( RegionNo )), RegionNo ) AS BranchSiteId,",
              "       BranchName,",
              "       BranchNumber",
              "FROM [Common].[Branch] WITH (READPAST)",
              "WHERE Enabled = 1"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Branch"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Common"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ID,",
              "       common_BranchTypeRef,",
              "       CONCAT( REPLICATE( '0', 3 - LEN( RegionNo )), RegionNo ) AS BranchSiteId,",
              "       BranchName,",
              "       BranchNumber",
              "FROM [Common].[Branch] WITH (READPAST)",
              "WHERE Enabled = 1</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "BranchType",
        "columns": [
          {
            "name": "ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Caption",
            "dataType": "string",
            "sourceColumn": "Caption",
            "sourceProviderType": "WChar"
          }
        ],
        "partitions": [
          {
            "name": "BranchType",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT ID,",
                "       Caption",
                "FROM [Common].[BranchType] WITH (READPAST);"
              ],
              "dataSource": "OLE-Monitor_MaintranceMonitoring"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ID,",
                  "       Caption",
                  "FROM [Common].[BranchType] WITH (READPAST);</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT ID,",
              "       Caption",
              "FROM [Common].[BranchType] WITH (READPAST);"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "BranchType"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Common"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ID,",
              "       Caption",
              "FROM [Common].[BranchType] WITH (READPAST);</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "BranchFaildLog",
        "columns": [
          {
            "name": "ID",
            "dataType": "int64",
            "sourceColumn": "ID",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "Common_BranchRef",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Common_BranchRef",
            "sourceProviderType": "Integer"
          },
          {
            "name": "PackageName",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "PackageName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ServerExecutionId",
            "dataType": "int64",
            "sourceColumn": "ServerExecutionId",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "ErrorCode",
            "dataType": "string",
            "sourceColumn": "ErrorCode",
            "sourceProviderType": "Integer"
          },
          {
            "name": "ErrorMessage",
            "dataType": "string",
            "sourceColumn": "ErrorMessage",
            "sourceProviderType": "WChar"
          },
          {
            "name": "MainPackageName",
            "dataType": "string",
            "sourceColumn": "MainPackageName"
          },
          {
            "name": "PackageType",
            "dataType": "string",
            "sourceColumn": "PackageType"
          },
          {
            "name": "InsertDate",
            "dataType": "dateTime",
            "sourceColumn": "InsertDate"
          },
          {
            "name": "InsertTime",
            "dataType": "string",
            "sourceColumn": "InsertTime"
          },
          {
            "name": "RowNumber",
            "dataType": "int64",
            "sourceColumn": "RowNumber"
          },
          {
            "type": "calculated",
            "name": "Faild PersianDateTime",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CONCATENATE(RELATED(DimDate[PersianDate]),CONCATENATE(\" \",BranchFaildLog[InsertTime]))"
          }
        ],
        "partitions": [
          {
            "name": "BranchFaildLog",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                ";WITH myCTE",
                "AS",
                "(",
                "    SELECT PackageName,",
                "           MAX( ServerExecutionId ) AS MAX_ServerExecutionId",
                "    FROM dbo.BranchFaildLog WITH (READPAST)",
                "    GROUP BY PackageName",
                ")",
                "SELECT myBranchFaildLog.ID,",
                "       ROW_NUMBER() OVER (ORDER BY InsertDatetime DESC) AS RowNumber,",
                "       myBranchFaildLog.Common_BranchRef,",
                "       myBranchFaildLog.PackageName,",
                "       myBranchFaildLog.ServerExecutionId,",
                "       CAST(myBranchFaildLog.ErrorCode AS NVARCHAR(50)) AS ErrorCode,",
                "       myBranchFaildLog.ErrorMessage,",
                "       CAST(myBranchFaildLog.InsertDatetime AS DATE) AS InsertDate,",
                "       CAST(myBranchFaildLog.InsertDatetime AS TIME(0)) AS InsertTime,",
                "       SUBSTRING( myBranchFaildLog.PackageName, 0, CHARINDEX( '_', myBranchFaildLog.PackageName )) AS MainPackageName,",
                "       SUBSTRING(",
                "                    myBranchFaildLog.PackageName,",
                "                    CHARINDEX( '_', myBranchFaildLog.PackageName ) + 1,",
                "                    LEN( myBranchFaildLog.PackageName )",
                "                ) AS PackageType",
                "FROM dbo.BranchFaildLog AS myBranchFaildLog WITH (READPAST)",
                "INNER JOIN myCTE ON myCTE.PackageName = myBranchFaildLog.PackageName AND ServerExecutionId = MAX_ServerExecutionId",
                "INNER JOIN Common.Branch AS myBranch WITH (READPAST) ON myBranch.ID = myBranchFaildLog.Common_BranchRef",
                "WHERE myBranch.Enabled = 1",
                "      AND myBranchFaildLog.InsertDatetime >= DATEADD( DAY, -1 * 5, CAST(GETDATE() AS DATE))",
                "      AND myBranchFaildLog.ErrorCode NOT IN ( -1073450996, -1073594105, -1073450985 );"
              ],
              "dataSource": "OLE-Monitor_MaintranceMonitoring"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>;WITH myCTE",
                  "AS",
                  "(",
                  "    SELECT PackageName,",
                  "           MAX( ServerExecutionId ) AS MAX_ServerExecutionId",
                  "    FROM dbo.BranchFaildLog WITH (READPAST)",
                  "    GROUP BY PackageName",
                  ")",
                  "SELECT myBranchFaildLog.ID,",
                  "       ROW_NUMBER() OVER (ORDER BY InsertDatetime DESC) AS RowNumber,",
                  "       myBranchFaildLog.Common_BranchRef,",
                  "       myBranchFaildLog.PackageName,",
                  "       myBranchFaildLog.ServerExecutionId,",
                  "       CAST(myBranchFaildLog.ErrorCode AS NVARCHAR(50)) AS ErrorCode,",
                  "       myBranchFaildLog.ErrorMessage,",
                  "       CAST(myBranchFaildLog.InsertDatetime AS DATE) AS InsertDate,",
                  "       CAST(myBranchFaildLog.InsertDatetime AS TIME(0)) AS InsertTime,",
                  "       SUBSTRING( myBranchFaildLog.PackageName, 0, CHARINDEX( '_', myBranchFaildLog.PackageName )) AS MainPackageName,",
                  "       SUBSTRING(",
                  "                    myBranchFaildLog.PackageName,",
                  "                    CHARINDEX( '_', myBranchFaildLog.PackageName ) + 1,",
                  "                    LEN( myBranchFaildLog.PackageName )",
                  "                ) AS PackageType",
                  "FROM dbo.BranchFaildLog AS myBranchFaildLog WITH (READPAST)",
                  "INNER JOIN myCTE ON myCTE.PackageName = myBranchFaildLog.PackageName AND ServerExecutionId = MAX_ServerExecutionId",
                  "INNER JOIN Common.Branch AS myBranch WITH (READPAST) ON myBranch.ID = myBranchFaildLog.Common_BranchRef",
                  "WHERE myBranch.Enabled = 1",
                  "      AND myBranchFaildLog.InsertDatetime >= DATEADD( DAY, -1 * 5, CAST(GETDATE() AS DATE))",
                  "      AND myBranchFaildLog.ErrorCode NOT IN ( -1073450996, -1073594105, -1073450985 );</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              ";WITH myCTE",
              "AS",
              "(",
              "    SELECT PackageName,",
              "           MAX( ServerExecutionId ) AS MAX_ServerExecutionId",
              "    FROM dbo.BranchFaildLog WITH (READPAST)",
              "    GROUP BY PackageName",
              ")",
              "SELECT myBranchFaildLog.ID,",
              "       ROW_NUMBER() OVER (ORDER BY InsertDatetime DESC) AS RowNumber,",
              "       myBranchFaildLog.Common_BranchRef,",
              "       myBranchFaildLog.PackageName,",
              "       myBranchFaildLog.ServerExecutionId,",
              "       CAST(myBranchFaildLog.ErrorCode AS NVARCHAR(50)) AS ErrorCode,",
              "       myBranchFaildLog.ErrorMessage,",
              "       CAST(myBranchFaildLog.InsertDatetime AS DATE) AS InsertDate,",
              "       CAST(myBranchFaildLog.InsertDatetime AS TIME(0)) AS InsertTime,",
              "       SUBSTRING( myBranchFaildLog.PackageName, 0, CHARINDEX( '_', myBranchFaildLog.PackageName )) AS MainPackageName,",
              "       SUBSTRING(",
              "                    myBranchFaildLog.PackageName,",
              "                    CHARINDEX( '_', myBranchFaildLog.PackageName ) + 1,",
              "                    LEN( myBranchFaildLog.PackageName )",
              "                ) AS PackageType",
              "FROM dbo.BranchFaildLog AS myBranchFaildLog WITH (READPAST)",
              "INNER JOIN myCTE ON myCTE.PackageName = myBranchFaildLog.PackageName AND ServerExecutionId = MAX_ServerExecutionId",
              "INNER JOIN Common.Branch AS myBranch WITH (READPAST) ON myBranch.ID = myBranchFaildLog.Common_BranchRef",
              "WHERE myBranch.Enabled = 1",
              "      AND myBranchFaildLog.InsertDatetime >= DATEADD( DAY, -1 * 5, CAST(GETDATE() AS DATE))",
              "      AND myBranchFaildLog.ErrorCode NOT IN ( -1073450996, -1073594105, -1073450985 );"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "BranchFaildLog"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "dbo"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>;WITH myCTE",
              "AS",
              "(",
              "    SELECT PackageName,",
              "           MAX( ServerExecutionId ) AS MAX_ServerExecutionId",
              "    FROM dbo.BranchFaildLog WITH (READPAST)",
              "    GROUP BY PackageName",
              ")",
              "SELECT myBranchFaildLog.ID,",
              "       ROW_NUMBER() OVER (ORDER BY InsertDatetime DESC) AS RowNumber,",
              "       myBranchFaildLog.Common_BranchRef,",
              "       myBranchFaildLog.PackageName,",
              "       myBranchFaildLog.ServerExecutionId,",
              "       CAST(myBranchFaildLog.ErrorCode AS NVARCHAR(50)) AS ErrorCode,",
              "       myBranchFaildLog.ErrorMessage,",
              "       CAST(myBranchFaildLog.InsertDatetime AS DATE) AS InsertDate,",
              "       CAST(myBranchFaildLog.InsertDatetime AS TIME(0)) AS InsertTime,",
              "       SUBSTRING( myBranchFaildLog.PackageName, 0, CHARINDEX( '_', myBranchFaildLog.PackageName )) AS MainPackageName,",
              "       SUBSTRING(",
              "                    myBranchFaildLog.PackageName,",
              "                    CHARINDEX( '_', myBranchFaildLog.PackageName ) + 1,",
              "                    LEN( myBranchFaildLog.PackageName )",
              "                ) AS PackageType",
              "FROM dbo.BranchFaildLog AS myBranchFaildLog WITH (READPAST)",
              "INNER JOIN myCTE ON myCTE.PackageName = myBranchFaildLog.PackageName AND ServerExecutionId = MAX_ServerExecutionId",
              "INNER JOIN Common.Branch AS myBranch WITH (READPAST) ON myBranch.ID = myBranchFaildLog.Common_BranchRef",
              "WHERE myBranch.Enabled = 1",
              "      AND myBranchFaildLog.InsertDatetime >= DATEADD( DAY, -1 * 5, CAST(GETDATE() AS DATE))",
              "      AND myBranchFaildLog.ErrorCode NOT IN ( -1073450996, -1073594105, -1073450985 );</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "System",
        "columns": [
          {
            "name": "RefreshDatetime",
            "dataType": "dateTime",
            "sourceColumn": "RefreshDatetime",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "PersianRefreshDatetime",
            "dataType": "string",
            "sourceColumn": "PersianRefreshDatetime",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "RefreshDate",
            "dataType": "dateTime",
            "sourceColumn": "RefreshDate",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "PersianRefreshDate",
            "dataType": "string",
            "sourceColumn": "PersianRefreshDate",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "System",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT GETDATE() AS RefreshDatetime,",
                "       FORMAT( GETDATE(), 'yyyy-MM-dd HH:mm:ss', 'fa-ir' ) AS PersianRefreshDatetime,",
                "       CAST(GETDATE() AS DATE) AS RefreshDate,",
                "       FORMAT( CAST(GETDATE() AS DATE), 'yyyy-MM-dd', 'fa-ir' ) AS PersianRefreshDate;"
              ],
              "dataSource": "OLE-Monitor_MaintranceMonitoring"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT GETDATE() AS RefreshDatetime,",
                  "       FORMAT( GETDATE(), 'yyyy-MM-dd HH:mm:ss', 'fa-ir' ) AS PersianRefreshDatetime,",
                  "       CAST(GETDATE() AS DATE) AS RefreshDate,",
                  "       FORMAT( CAST(GETDATE() AS DATE), 'yyyy-MM-dd', 'fa-ir' ) AS PersianRefreshDate;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT GETDATE() AS RefreshDatetime,",
              "       FORMAT( GETDATE(), 'yyyy-MM-dd HH:mm:ss', 'fa-ir' ) AS PersianRefreshDatetime,",
              "       CAST(GETDATE() AS DATE) AS RefreshDate,",
              "       FORMAT( CAST(GETDATE() AS DATE), 'yyyy-MM-dd', 'fa-ir' ) AS PersianRefreshDate;"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "System"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT GETDATE() AS RefreshDatetime,",
              "       FORMAT( GETDATE(), 'yyyy-MM-dd HH:mm:ss', 'fa-ir' ) AS PersianRefreshDatetime,",
              "       CAST(GETDATE() AS DATE) AS RefreshDate,",
              "       FORMAT( CAST(GETDATE() AS DATE), 'yyyy-MM-dd', 'fa-ir' ) AS PersianRefreshDate;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "DimDate",
        "columns": [
          {
            "name": "ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID",
            "sourceProviderType": "Integer"
          },
          {
            "name": "GregorianDate",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "GregorianDate",
            "formatString": "General Date",
            "sourceProviderType": "DBDate"
          },
          {
            "name": "PersianYearInt",
            "dataType": "int64",
            "sourceColumn": "PersianYearInt",
            "sourceProviderType": "SmallInt"
          },
          {
            "name": "PersianMonthNo",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PersianMonthNo",
            "sourceProviderType": "UnsignedTinyInt"
          },
          {
            "name": "PersianDayInMonth",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PersianDayInMonth",
            "sourceProviderType": "UnsignedTinyInt"
          },
          {
            "name": "PersianDayOfWeekInt",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "PersianDayOfWeekInt",
            "sourceProviderType": "UnsignedTinyInt"
          },
          {
            "name": "PersianDate",
            "dataType": "string",
            "sourceColumn": "PersianDate",
            "sortByColumn": "ID_Sort_Desc",
            "sourceProviderType": "Char"
          },
          {
            "name": "PersianYearMonthInt",
            "dataType": "int64",
            "sourceColumn": "PersianYearMonthInt",
            "sourceProviderType": "Integer"
          },
          {
            "name": "PersianYearMonthStr",
            "dataType": "string",
            "sourceColumn": "PersianYearMonthStr",
            "sourceProviderType": "Char"
          },
          {
            "name": "PersianWeekOfMonthNo",
            "dataType": "int64",
            "sourceColumn": "PersianWeekOfMonthNo",
            "sourceProviderType": "Integer"
          },
          {
            "name": "PersianWeekOfYearNo",
            "dataType": "int64",
            "sourceColumn": "PersianWeekOfYearNo",
            "sourceProviderType": "Integer"
          },
          {
            "name": "PersianSeasonInt",
            "dataType": "int64",
            "sourceColumn": "PersianSeasonInt",
            "sourceProviderType": "Integer"
          },
          {
            "name": "PersianMonthName",
            "dataType": "string",
            "sourceColumn": "PersianMonthName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "PersianDayOfWeekName",
            "dataType": "string",
            "sourceColumn": "PersianDayOfWeekName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "PersianWeekOfMonthName",
            "dataType": "string",
            "sourceColumn": "PersianWeekOfMonthName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "PersianWeekOfYearName",
            "dataType": "string",
            "sourceColumn": "PersianWeekOfYearName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "PersianSeason",
            "dataType": "string",
            "sourceColumn": "PersianSeason",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ID_Sort_Desc",
            "dataType": "int64",
            "sourceColumn": "ID_Sort_Desc"
          }
        ],
        "partitions": [
          {
            "name": "DimDate",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "DECLARE @myMinDate DATE;",
                "DECLARE @myMaxDate DATE;",
                "SELECT @myMinDate = MIN( CAST(InsertDatetime AS DATE)), @myMaxDate = MAX( CAST(InsertDatetime AS DATE)) FROM dbo.BranchFaildLog WITH (READPAST);",
                "SELECT ID,",
                "       ID * -1 AS ID_Sort_Desc,",
                "       GregorianDate,",
                "       PersianDate,",
                "       PersianYearInt,",
                "       PersianMonthNo,",
                "       PersianDayInMonth,",
                "       PersianDayOfWeekInt,",
                "       PersianYearMonthInt,",
                "       PersianYearMonthStr,",
                "       PersianWeekOfMonthNo,",
                "       PersianWeekOfYearNo,",
                "       PersianSeasonInt,",
                "       PersianMonthName,",
                "       PersianDayOfWeekName,",
                "       PersianWeekOfMonthName,",
                "       PersianWeekOfYearName,",
                "       PersianSeason",
                "FROM [Common].[DimDate] WITH (READPAST)",
                "WHERE GregorianDate >= @myMinDate",
                "      AND GregorianDate <= @myMaxDate;"
              ],
              "dataSource": "OLE-Monitor_MaintranceMonitoring"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>DECLARE @myMinDate DATE;",
                  "DECLARE @myMaxDate DATE;",
                  "SELECT @myMinDate = MIN( CAST(InsertDatetime AS DATE)), @myMaxDate = MAX( CAST(InsertDatetime AS DATE)) FROM dbo.BranchFaildLog WITH (READPAST);",
                  "SELECT ID,",
                  "       ID * -1 AS ID_Sort_Desc,",
                  "       GregorianDate,",
                  "       PersianDate,",
                  "       PersianYearInt,",
                  "       PersianMonthNo,",
                  "       PersianDayInMonth,",
                  "       PersianDayOfWeekInt,",
                  "       PersianYearMonthInt,",
                  "       PersianYearMonthStr,",
                  "       PersianWeekOfMonthNo,",
                  "       PersianWeekOfYearNo,",
                  "       PersianSeasonInt,",
                  "       PersianMonthName,",
                  "       PersianDayOfWeekName,",
                  "       PersianWeekOfMonthName,",
                  "       PersianWeekOfYearName,",
                  "       PersianSeason",
                  "FROM [Common].[DimDate] WITH (READPAST)",
                  "WHERE GregorianDate >= @myMinDate",
                  "      AND GregorianDate <= @myMaxDate;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "DECLARE @myMinDate DATE;",
              "DECLARE @myMaxDate DATE;",
              "SELECT @myMinDate = MIN( CAST(InsertDatetime AS DATE)), @myMaxDate = MAX( CAST(InsertDatetime AS DATE)) FROM dbo.BranchFaildLog WITH (READPAST);",
              "SELECT ID,",
              "       ID * -1 AS ID_Sort_Desc,",
              "       GregorianDate,",
              "       PersianDate,",
              "       PersianYearInt,",
              "       PersianMonthNo,",
              "       PersianDayInMonth,",
              "       PersianDayOfWeekInt,",
              "       PersianYearMonthInt,",
              "       PersianYearMonthStr,",
              "       PersianWeekOfMonthNo,",
              "       PersianWeekOfYearNo,",
              "       PersianSeasonInt,",
              "       PersianMonthName,",
              "       PersianDayOfWeekName,",
              "       PersianWeekOfMonthName,",
              "       PersianWeekOfYearName,",
              "       PersianSeason",
              "FROM [Common].[DimDate] WITH (READPAST)",
              "WHERE GregorianDate >= @myMinDate",
              "      AND GregorianDate <= @myMaxDate;"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "DimDate"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Common"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>DECLARE @myMinDate DATE;",
              "DECLARE @myMaxDate DATE;",
              "SELECT @myMinDate = MIN( CAST(InsertDatetime AS DATE)), @myMaxDate = MAX( CAST(InsertDatetime AS DATE)) FROM dbo.BranchFaildLog WITH (READPAST);",
              "SELECT ID,",
              "       ID * -1 AS ID_Sort_Desc,",
              "       GregorianDate,",
              "       PersianDate,",
              "       PersianYearInt,",
              "       PersianMonthNo,",
              "       PersianDayInMonth,",
              "       PersianDayOfWeekInt,",
              "       PersianYearMonthInt,",
              "       PersianYearMonthStr,",
              "       PersianWeekOfMonthNo,",
              "       PersianWeekOfYearNo,",
              "       PersianSeasonInt,",
              "       PersianMonthName,",
              "       PersianDayOfWeekName,",
              "       PersianWeekOfMonthName,",
              "       PersianWeekOfYearName,",
              "       PersianSeason",
              "FROM [Common].[DimDate] WITH (READPAST)",
              "WHERE GregorianDate >= @myMinDate",
              "      AND GregorianDate <= @myMaxDate;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "DimTime",
        "columns": [
          {
            "name": "ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Hour24",
            "dataType": "int64",
            "sourceColumn": "Hour24",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Minute",
            "dataType": "int64",
            "sourceColumn": "Minute",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Second",
            "dataType": "int64",
            "sourceColumn": "Second",
            "sourceProviderType": "Integer"
          },
          {
            "name": "FullTimeString24",
            "dataType": "string",
            "sourceColumn": "FullTimeString24",
            "sourceProviderType": "Char"
          },
          {
            "name": "FullTime",
            "dataType": "dateTime",
            "sourceColumn": "FullTime",
            "formatString": "General Date",
            "sourceProviderType": "145"
          }
        ],
        "partitions": [
          {
            "name": "DimTime",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "DECLARE @myMinDate TIME(0);",
                "DECLARE @myMaxDate TIME(0);",
                "SELECT @myMinDate = MIN( CAST(InsertDatetime AS TIME(0))), @myMaxDate = MAX( CAST(InsertDatetime AS TIME(0))) FROM dbo.BranchFaildLog WITH (READPAST);",
                "SELECT ID,",
                "       Hour24,",
                "       Minute,",
                "       Second,",
                "       FullTimeString24,",
                "       FullTime",
                "FROM [Common].[DimTime] WITH (READPAST)",
                "WHERE FullTime >= @myMinDate",
                "      AND FullTime <= @myMaxDate;"
              ],
              "dataSource": "OLE-Monitor_MaintranceMonitoring"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>DECLARE @myMinDate TIME(0);",
                  "DECLARE @myMaxDate TIME(0);",
                  "SELECT @myMinDate = MIN( CAST(InsertDatetime AS TIME(0))), @myMaxDate = MAX( CAST(InsertDatetime AS TIME(0))) FROM dbo.BranchFaildLog WITH (READPAST);",
                  "SELECT ID,",
                  "       Hour24,",
                  "       Minute,",
                  "       Second,",
                  "       FullTimeString24,",
                  "       FullTime",
                  "FROM [Common].[DimTime] WITH (READPAST)",
                  "WHERE FullTime >= @myMinDate",
                  "      AND FullTime <= @myMaxDate;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "DECLARE @myMinDate TIME(0);",
              "DECLARE @myMaxDate TIME(0);",
              "SELECT @myMinDate = MIN( CAST(InsertDatetime AS TIME(0))), @myMaxDate = MAX( CAST(InsertDatetime AS TIME(0))) FROM dbo.BranchFaildLog WITH (READPAST);",
              "SELECT ID,",
              "       Hour24,",
              "       Minute,",
              "       Second,",
              "       FullTimeString24,",
              "       FullTime",
              "FROM [Common].[DimTime] WITH (READPAST)",
              "WHERE FullTime >= @myMinDate",
              "      AND FullTime <= @myMaxDate;"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "DimTime"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Common"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>DECLARE @myMinDate TIME(0);",
              "DECLARE @myMaxDate TIME(0);",
              "SELECT @myMinDate = MIN( CAST(InsertDatetime AS TIME(0))), @myMaxDate = MAX( CAST(InsertDatetime AS TIME(0))) FROM dbo.BranchFaildLog WITH (READPAST);",
              "SELECT ID,",
              "       Hour24,",
              "       Minute,",
              "       Second,",
              "       FullTimeString24,",
              "       FullTime",
              "FROM [Common].[DimTime] WITH (READPAST)",
              "WHERE FullTime >= @myMinDate",
              "      AND FullTime <= @myMaxDate;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "d96f9e8c-e07f-4ede-b402-fd7bbd525abc",
        "fromTable": "Branch",
        "fromColumn": "common_BranchTypeRef",
        "toTable": "BranchType",
        "toColumn": "ID"
      },
      {
        "name": "00ad1a1b-de1c-4a9b-96e4-69c9115ed07f",
        "fromTable": "BranchFaildLog",
        "fromColumn": "Common_BranchRef",
        "toTable": "Branch",
        "toColumn": "ID"
      },
      {
        "name": "8c4c07df-70e4-441d-af39-d36894198c95",
        "fromTable": "BranchFaildLog",
        "fromColumn": "InsertDate",
        "toTable": "DimDate",
        "toColumn": "GregorianDate"
      },
      {
        "name": "f41d1b7f-5a05-4d5c-a02f-a7ee0bb40c55",
        "fromTable": "BranchFaildLog",
        "fromColumn": "InsertTime",
        "toTable": "DimTime",
        "toColumn": "FullTime"
      }
    ],
    "roles": [
      {
        "name": "Read_ALL",
        "modelPermission": "read",
        "members": [
        ]
      }
    ],
    "annotations": [
      {
        "name": "ClientCompatibilityLevel",
        "value": "400"
      }
    ]
  },
  "id": "SemanticModel"
}