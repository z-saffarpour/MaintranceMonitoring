{
  "name": "SemanticModel",
  "compatibilityLevel": 1200,
  "model": {
    "culture": "en-US",
    "dataSources": [
      {
        "name": "OLE-Monitor_MaintranceMonitoring",
        "connectionString": "Data Source=SRV70001\\NODE;Persist Security Info=false;Integrated Security=SSPI;Initial Catalog=MaintranceMonitoring;Application Name=Application Name=SSAS-SqlDeep_MaintranceMonitoring;Provider=SQLNCLI11",
        "impersonationMode": "impersonateServiceAccount",
        "annotations": [
          {
            "name": "ConnectionEditUISource",
            "value": "SqlServer"
          }
        ]
      }
    ],
    "tables": [
      {
        "name": "Branch",
        "columns": [
          {
            "name": "ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID",
            "sourceProviderType": "Integer"
          },
          {
            "name": "common_BranchTypeRef",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "common_BranchTypeRef",
            "sourceProviderType": "Integer"
          },
          {
            "name": "BranchName",
            "dataType": "string",
            "sourceColumn": "BranchName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "BranchNumber",
            "dataType": "string",
            "sourceColumn": "BranchNumber",
            "sourceProviderType": "Char"
          },
          {
            "name": "BranchSiteId",
            "dataType": "string",
            "sourceColumn": "BranchSiteId"
          }
        ],
        "partitions": [
          {
            "name": "Branch",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT ID,",
                "       common_BranchTypeRef,",
                "       CONCAT( REPLICATE( '0', 3 - LEN( RegionNo )), RegionNo ) AS BranchSiteId,",
                "       BranchName,",
                "       BranchNumber",
                "FROM [Common].[Branch] WITH (READPAST)",
                "WHERE Enabled = 1",
                "      AND EnabledRestoreHistory = 1;"
              ],
              "dataSource": "OLE-Monitor_MaintranceMonitoring"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ID,",
                  "       common_BranchTypeRef,",
                  "       CONCAT( REPLICATE( '0', 3 - LEN( RegionNo )), RegionNo ) AS BranchSiteId,",
                  "       BranchName,",
                  "       BranchNumber",
                  "FROM [Common].[Branch] WITH (READPAST)",
                  "WHERE Enabled = 1",
                  "      AND EnabledRestoreHistory = 1;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT ID,",
              "       common_BranchTypeRef,",
              "       CONCAT( REPLICATE( '0', 3 - LEN( RegionNo )), RegionNo ) AS BranchSiteId,",
              "       BranchName,",
              "       BranchNumber",
              "FROM [Common].[Branch] WITH (READPAST)",
              "WHERE Enabled = 1",
              "      AND EnabledRestoreHistory = 1;"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "Branch"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Common"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ID,",
              "       common_BranchTypeRef,",
              "       CONCAT( REPLICATE( '0', 3 - LEN( RegionNo )), RegionNo ) AS BranchSiteId,",
              "       BranchName,",
              "       BranchNumber",
              "FROM [Common].[Branch] WITH (READPAST)",
              "WHERE Enabled = 1",
              "      AND EnabledRestoreHistory = 1;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "BranchType",
        "columns": [
          {
            "name": "ID",
            "dataType": "int64",
            "sourceColumn": "ID",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Caption",
            "dataType": "string",
            "sourceColumn": "Caption",
            "sourceProviderType": "WChar"
          }
        ],
        "partitions": [
          {
            "name": "BranchType",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT ID,",
                "       Caption",
                "FROM [Common].[BranchType] WITH (READPAST);"
              ],
              "dataSource": "OLE-Monitor_MaintranceMonitoring"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ID,",
                  "       Caption",
                  "FROM [Common].[BranchType] WITH (READPAST);</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT ID,",
              "       Caption",
              "FROM [Common].[BranchType] WITH (READPAST);"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "BranchType"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Common"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ID,",
              "       Caption",
              "FROM [Common].[BranchType] WITH (READPAST);</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "RestoreHistory_Details",
        "columns": [
          {
            "name": "RowNumber",
            "dataType": "int64",
            "sourceColumn": "RowNumber",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "Common_BranchRef",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Common_BranchRef",
            "sourceProviderType": "Integer"
          },
          {
            "name": "BranchRestoreDatabase",
            "dataType": "string",
            "sourceColumn": "BranchRestoreDatabase",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "RestoreDatabase",
            "dataType": "string",
            "sourceColumn": "RestoreDatabase",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "RestoreUsername",
            "dataType": "string",
            "sourceColumn": "RestoreUsername",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Common_Date_RestoreRef",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Common_Date_RestoreRef",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Common_Time_RestoreRef",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Common_Time_RestoreRef",
            "sourceProviderType": "Integer"
          },
          {
            "name": "BackupSetId",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "BackupSetId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "OriginalMachineName",
            "dataType": "string",
            "sourceColumn": "OriginalMachineName",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "OriginalServerName",
            "dataType": "string",
            "sourceColumn": "OriginalServerName",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "OriginalDatabase",
            "dataType": "string",
            "sourceColumn": "OriginalDatabase",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "OriginalRecoveryModel",
            "dataType": "string",
            "sourceColumn": "OriginalRecoveryModel",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "OriginalBackupName",
            "dataType": "string",
            "sourceColumn": "OriginalBackupName",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "MaintranceBackup_OriginalBackupTypeRef",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "MaintranceBackup_OriginalBackupTypeRef",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Common_Date_OriginalBackupStartRef",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Common_Date_OriginalBackupStartRef",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Common_Time_OriginalBackupStartRef",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Common_Time_OriginalBackupStartRef",
            "sourceProviderType": "Integer"
          },
          {
            "name": "OriginalCompressedBackupSize",
            "dataType": "double",
            "sourceColumn": "OriginalCompressedBackupSize",
            "sourceProviderType": "Decimal"
          },
          {
            "type": "calculated",
            "name": "Backup Datetime",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CONCATENATE(RELATED(DimDate_Details_Backup[PersianDate]),CONCATENATE(\" \",RELATED(DimTime_Details_Backup[FullTimeString24])))"
          },
          {
            "type": "calculated",
            "name": "Restore Datetime",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CONCATENATE(RELATED(DimDate_Details_Restore[PersianDate]),CONCATENATE(\" \", RELATED(DimTime_Details_Restore[FullTimeString24])))"
          }
        ],
        "partitions": [
          {
            "name": "RestoreHistoryDetails",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT ROW_NUMBER() OVER (ORDER BY myBranch.BranchName, myRestoreHistory.RestoreDatabase, myRestoreHistory.Common_Date_RestoreRef DESC, myRestoreHistory.Common_Time_RestoreRef DESC ) AS RowNumber,",
                "       myRestoreHistory.Common_BranchRef,",
                "       CONCAT( myRestoreHistory.Common_BranchRef, '_', myRestoreHistory.RestoreDatabase ) AS BranchRestoreDatabase,",
                "       myRestoreHistory.RestoreDatabase,",
                "       myRestoreHistory.RestoreUsername,",
                "       myRestoreHistory.Common_Date_RestoreRef,",
                "       myRestoreHistory.Common_Time_RestoreRef,",
                "       myRestoreHistory.BackupSetId,",
                "       myRestoreHistory.OriginalMachineName,",
                "       myRestoreHistory.OriginalServerName,",
                "       myRestoreHistory.OriginalDatabase,",
                "       myRestoreHistory.OriginalRecoveryModel,",
                "       myRestoreHistory.OriginalBackupName,",
                "       myRestoreHistory.MaintranceBackup_OriginalBackupTypeRef,",
                "       myRestoreHistory.Common_Date_OriginalBackupStartRef,",
                "       myRestoreHistory.Common_Time_OriginalBackupStartRef,",
                "       myRestoreHistory.OriginalCompressedBackupSize",
                "FROM MaintranceBackup.RestoreHistory AS myRestoreHistory WITH (READPAST)",
                "INNER JOIN Common.Branch AS myBranch WITH (READPAST) ON myBranch.ID = myRestoreHistory.Common_BranchRef",
                "WHERE myBranch.Enabled = 1;"
              ],
              "dataSource": "OLE-Monitor_MaintranceMonitoring"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ROW_NUMBER() OVER (ORDER BY myBranch.BranchName, myRestoreHistory.RestoreDatabase, myRestoreHistory.Common_Date_RestoreRef DESC, myRestoreHistory.Common_Time_RestoreRef DESC ) AS RowNumber,",
                  "       myRestoreHistory.Common_BranchRef,",
                  "       CONCAT( myRestoreHistory.Common_BranchRef, '_', myRestoreHistory.RestoreDatabase ) AS BranchRestoreDatabase,",
                  "       myRestoreHistory.RestoreDatabase,",
                  "       myRestoreHistory.RestoreUsername,",
                  "       myRestoreHistory.Common_Date_RestoreRef,",
                  "       myRestoreHistory.Common_Time_RestoreRef,",
                  "       myRestoreHistory.BackupSetId,",
                  "       myRestoreHistory.OriginalMachineName,",
                  "       myRestoreHistory.OriginalServerName,",
                  "       myRestoreHistory.OriginalDatabase,",
                  "       myRestoreHistory.OriginalRecoveryModel,",
                  "       myRestoreHistory.OriginalBackupName,",
                  "       myRestoreHistory.MaintranceBackup_OriginalBackupTypeRef,",
                  "       myRestoreHistory.Common_Date_OriginalBackupStartRef,",
                  "       myRestoreHistory.Common_Time_OriginalBackupStartRef,",
                  "       myRestoreHistory.OriginalCompressedBackupSize",
                  "FROM MaintranceBackup.RestoreHistory AS myRestoreHistory WITH (READPAST)",
                  "INNER JOIN Common.Branch AS myBranch WITH (READPAST) ON myBranch.ID = myRestoreHistory.Common_BranchRef",
                  "WHERE myBranch.Enabled = 1;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT ROW_NUMBER() OVER (ORDER BY myBranch.BranchName, myRestoreHistory.RestoreDatabase, myRestoreHistory.Common_Date_RestoreRef DESC, myRestoreHistory.Common_Time_RestoreRef DESC ) AS RowNumber,",
              "       myRestoreHistory.Common_BranchRef,",
              "       CONCAT( myRestoreHistory.Common_BranchRef, '_', myRestoreHistory.RestoreDatabase ) AS BranchRestoreDatabase,",
              "       myRestoreHistory.RestoreDatabase,",
              "       myRestoreHistory.RestoreUsername,",
              "       myRestoreHistory.Common_Date_RestoreRef,",
              "       myRestoreHistory.Common_Time_RestoreRef,",
              "       myRestoreHistory.BackupSetId,",
              "       myRestoreHistory.OriginalMachineName,",
              "       myRestoreHistory.OriginalServerName,",
              "       myRestoreHistory.OriginalDatabase,",
              "       myRestoreHistory.OriginalRecoveryModel,",
              "       myRestoreHistory.OriginalBackupName,",
              "       myRestoreHistory.MaintranceBackup_OriginalBackupTypeRef,",
              "       myRestoreHistory.Common_Date_OriginalBackupStartRef,",
              "       myRestoreHistory.Common_Time_OriginalBackupStartRef,",
              "       myRestoreHistory.OriginalCompressedBackupSize",
              "FROM MaintranceBackup.RestoreHistory AS myRestoreHistory WITH (READPAST)",
              "INNER JOIN Common.Branch AS myBranch WITH (READPAST) ON myBranch.ID = myRestoreHistory.Common_BranchRef",
              "WHERE myBranch.Enabled = 1;"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "RestoreHistoryDetails"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ROW_NUMBER() OVER (ORDER BY myBranch.BranchName, myRestoreHistory.RestoreDatabase, myRestoreHistory.Common_Date_RestoreRef DESC, myRestoreHistory.Common_Time_RestoreRef DESC ) AS RowNumber,",
              "       myRestoreHistory.Common_BranchRef,",
              "       CONCAT( myRestoreHistory.Common_BranchRef, '_', myRestoreHistory.RestoreDatabase ) AS BranchRestoreDatabase,",
              "       myRestoreHistory.RestoreDatabase,",
              "       myRestoreHistory.RestoreUsername,",
              "       myRestoreHistory.Common_Date_RestoreRef,",
              "       myRestoreHistory.Common_Time_RestoreRef,",
              "       myRestoreHistory.BackupSetId,",
              "       myRestoreHistory.OriginalMachineName,",
              "       myRestoreHistory.OriginalServerName,",
              "       myRestoreHistory.OriginalDatabase,",
              "       myRestoreHistory.OriginalRecoveryModel,",
              "       myRestoreHistory.OriginalBackupName,",
              "       myRestoreHistory.MaintranceBackup_OriginalBackupTypeRef,",
              "       myRestoreHistory.Common_Date_OriginalBackupStartRef,",
              "       myRestoreHistory.Common_Time_OriginalBackupStartRef,",
              "       myRestoreHistory.OriginalCompressedBackupSize",
              "FROM MaintranceBackup.RestoreHistory AS myRestoreHistory WITH (READPAST)",
              "INNER JOIN Common.Branch AS myBranch WITH (READPAST) ON myBranch.ID = myRestoreHistory.Common_BranchRef",
              "WHERE myBranch.Enabled = 1;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "RestoreHistory_Header",
        "columns": [
          {
            "name": "RowNumber",
            "dataType": "int64",
            "sourceColumn": "RowNumber",
            "sourceProviderType": "BigInt"
          },
          {
            "name": "Common_BranchRef",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Common_BranchRef",
            "sourceProviderType": "Integer"
          },
          {
            "name": "BranchRestoreDatabase",
            "dataType": "string",
            "sourceColumn": "BranchRestoreDatabase",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "RestoreDatabase",
            "dataType": "string",
            "sourceColumn": "RestoreDatabase",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "RestoreUsername",
            "dataType": "string",
            "sourceColumn": "RestoreUsername",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "Common_Date_RestoreRef",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Common_Date_RestoreRef",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Common_Time_RestoreRef",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Common_Time_RestoreRef",
            "sourceProviderType": "Integer"
          },
          {
            "name": "BackupSetId",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "BackupSetId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "OriginalMachineName",
            "dataType": "string",
            "sourceColumn": "OriginalMachineName",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "OriginalServerName",
            "dataType": "string",
            "sourceColumn": "OriginalServerName",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "OriginalDatabase",
            "dataType": "string",
            "sourceColumn": "OriginalDatabase",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "OriginalRecoveryModel",
            "dataType": "string",
            "sourceColumn": "OriginalRecoveryModel",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "OriginalBackupName",
            "dataType": "string",
            "sourceColumn": "OriginalBackupName",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "MaintranceBackup_OriginalBackupTypeRef",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "MaintranceBackup_OriginalBackupTypeRef",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Common_Date_OriginalBackupStartRef",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Common_Date_OriginalBackupStartRef",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Common_Time_OriginalBackupStartRef",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Common_Time_OriginalBackupStartRef",
            "sourceProviderType": "Integer"
          },
          {
            "name": "OriginalCompressedBackupSize",
            "dataType": "double",
            "sourceColumn": "OriginalCompressedBackupSize",
            "sourceProviderType": "Decimal"
          },
          {
            "name": "Diffrence_Last_Backup_Restore",
            "dataType": "string",
            "sourceColumn": "Diffrence_Last_Backup_Restore",
            "sourceProviderType": "VarChar"
          },
          {
            "type": "calculated",
            "name": "Backup Datetime",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CONCATENATE(RELATED(DimDate_Header_Backup[PersianDate]),CONCATENATE(\" \", RELATED(DimTime_Header_Backup[FullTimeString24])))"
          },
          {
            "type": "calculated",
            "name": "Retore Datetime",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "CONCATENATE(RELATED(DimDate_Header_Restore[PersianDate]),CONCATENATE(\" \", RELATED(DimTime_Header_Restore[FullTimeString24])))"
          },
          {
            "name": "StatusColor",
            "dataType": "string",
            "sourceColumn": "StatusColor"
          }
        ],
        "partitions": [
          {
            "name": "RestoreHistoryHeader",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "DECLARE @myDatetime DATETIME;",
                "SET @myDatetime = DATEADD( MINUTE, -1 * 15, CAST(GETDATE() AS DATETIME));",
                "SELECT ROW_NUMBER() OVER (ORDER BY myRestoreHistory.BranchName,",
                "                                   myRestoreHistory.RestoreDatabase,",
                "                                   myRestoreHistory.Common_Date_RestoreRef DESC,",
                "                                   myRestoreHistory.Common_Time_RestoreRef DESC",
                "                         ) AS RowNumber,",
                "       Common_BranchRef,",
                "       CONCAT( Common_BranchRef, '_', myRestoreHistory.RestoreDatabase ) AS BranchRestoreDatabase,",
                "       RestoreDatabase,",
                "       RestoreUsername,",
                "       Common_Date_RestoreRef,",
                "       Common_Time_RestoreRef,",
                "       BackupSetId,",
                "       OriginalMachineName,",
                "       OriginalServerName,",
                "       OriginalDatabase,",
                "       OriginalRecoveryModel,",
                "       OriginalBackupName,",
                "       MaintranceBackup_OriginalBackupTypeRef,",
                "       Common_Date_OriginalBackupStartRef,",
                "       Common_Time_OriginalBackupStartRef,",
                "       OriginalCompressedBackupSize,",
                "       CASE",
                "           WHEN Diffrence_Last_Backup_Restore_second / (60 * 60 * 24) > 0 THEN",
                "               CONCAT( Diffrence_Last_Backup_Restore_day, ' day(s)' )",
                "           WHEN Diffrence_Last_Backup_Restore_second / (60 * 60) > 0 THEN",
                "               CONCAT( Diffrence_Last_Backup_Restore_hour, ' hour(s)' )",
                "           WHEN Diffrence_Last_Backup_Restore_second / 60 > 0 THEN",
                "               CONCAT( Diffrence_Last_Backup_Restore_minute, ' minute(s)' )",
                "           WHEN Diffrence_Last_Backup_Restore_second > 0 THEN",
                "               CONCAT( Diffrence_Last_Backup_Restore_second, ' second(s)' )",
                "           ELSE '0'",
                "       END AS Diffrence_Last_Backup_Restore,",
                "       CASE",
                "           WHEN myRestoreHistory.OriginalRecoveryModel = 'SIMPLE' THEN",
                "               CASE",
                "                   WHEN ABS(Diffrence_Last_Backup_Restore_second) >= 0",
                "                        AND ABS(Diffrence_Last_Backup_Restore_second) < (60 * 60 * 25) THEN 'LightGreen'",
                "                   ELSE 'Red'",
                "               END",
                "           --===============",
                "           WHEN myRestoreHistory.OriginalRecoveryModel = 'BULK-LOGGED' THEN",
                "               CASE",
                "                   WHEN ABS(Diffrence_Last_Backup_Restore_second) >= 0",
                "                        AND ABS(Diffrence_Last_Backup_Restore_second) < (60 * 60 * 1) THEN 'LightGreen'",
                "                   WHEN ABS(Diffrence_Last_Backup_Restore_second) >= (60 * 60 * 1)",
                "                        AND ABS(Diffrence_Last_Backup_Restore_second) < (60 * 60 * 2) THEN 'Orange'",
                "                   WHEN ABS(Diffrence_Last_Backup_Restore_second) >= (60 * 60 * 2)",
                "                        AND ABS(Diffrence_Last_Backup_Restore_second) < (60 * 60 * 3) THEN 'Yellow'",
                "                   ELSE 'Red'",
                "               END",
                "           --===============",
                "           WHEN myRestoreHistory.OriginalRecoveryModel = 'FULL' THEN",
                "               CASE",
                "                   WHEN ABS(Diffrence_Last_Backup_Restore_second) >= 0",
                "                        AND ABS(Diffrence_Last_Backup_Restore_second) < (60 * 20 * 1) THEN 'LightGreen'",
                "                   WHEN ABS(Diffrence_Last_Backup_Restore_second) >= (60 * 20 * 1)",
                "                        AND ABS(Diffrence_Last_Backup_Restore_second) < (60 * 20 * 2) THEN 'Orange'",
                "                   WHEN ABS(Diffrence_Last_Backup_Restore_second) >= (60 * 20 * 2)",
                "                        AND ABS(Diffrence_Last_Backup_Restore_second) < (60 * 20 * 4) THEN 'Yellow'",
                "                   ELSE 'Red'",
                "               END",
                "       END AS StatusColor",
                "FROM",
                "(",
                "    SELECT myRestoreHistory.ID,",
                "           ROW_NUMBER() OVER (PARTITION BY myRestoreHistory.Common_BranchRef,",
                "                                           myRestoreHistory.RestoreDatabase",
                "                              ORDER BY myRestoreHistory.InsertDatetime",
                "                             ) AS RowNumber,",
                "           myBranch.BranchName,",
                "           myRestoreHistory.Common_BranchRef,",
                "           myRestoreHistory.RestoreDatabase,",
                "           myRestoreHistory.RestoreUsername,",
                "           myRestoreHistory.Common_Date_RestoreRef,",
                "           myRestoreHistory.Common_Time_RestoreRef,",
                "           myRestoreHistory.BackupSetId,",
                "           myRestoreHistory.OriginalMachineName,",
                "           myRestoreHistory.OriginalServerName,",
                "           myRestoreHistory.OriginalDatabase,",
                "           myRestoreHistory.OriginalRecoveryModel,",
                "           myRestoreHistory.OriginalBackupName,",
                "           myRestoreHistory.MaintranceBackup_OriginalBackupTypeRef,",
                "           myRestoreHistory.Common_Date_OriginalBackupStartRef,",
                "           myRestoreHistory.Common_Time_OriginalBackupStartRef,",
                "           myRestoreHistory.OriginalCompressedBackupSize,",
                "           myRestoreHistory.OriginalBackupDatetime,",
                "           CASE",
                "               WHEN myRestoreHistory.HasLastBackupRestoreForDR = 1 THEN",
                "                   DATEDIFF( DAY, myRestoreHistory.OriginalBackupDatetime, @myDatetime )",
                "           END AS Diffrence_Last_Backup_Restore_day,",
                "           CASE",
                "               WHEN myRestoreHistory.HasLastBackupRestoreForDR = 1 THEN",
                "                   DATEDIFF( HOUR, myRestoreHistory.OriginalBackupDatetime, @myDatetime )",
                "           END AS Diffrence_Last_Backup_Restore_hour,",
                "           CASE",
                "               WHEN myRestoreHistory.HasLastBackupRestoreForDR = 1 THEN",
                "                   DATEDIFF( MINUTE, myRestoreHistory.OriginalBackupDatetime, @myDatetime )",
                "           END AS Diffrence_Last_Backup_Restore_minute,",
                "           CASE",
                "               WHEN myRestoreHistory.HasLastBackupRestoreForDR = 1 THEN",
                "                   DATEDIFF( SECOND, myRestoreHistory.OriginalBackupDatetime, @myDatetime )",
                "           END AS Diffrence_Last_Backup_Restore_second",
                "    FROM MaintranceBackup.RestoreHistory AS myRestoreHistory WITH (READPAST)",
                "    INNER JOIN Common.Branch AS myBranch WITH (READPAST) ON myBranch.ID = myRestoreHistory.Common_BranchRef",
                "    WHERE myBranch.Enabled = 1",
                "          AND HasLastBackupRestoreForDR = 1",
                ") AS myRestoreHistory",
                "WHERE myRestoreHistory.RowNumber = 1;"
              ],
              "dataSource": "OLE-Monitor_MaintranceMonitoring"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>DECLARE @myDatetime DATETIME;",
                  "SET @myDatetime = DATEADD( MINUTE, -1 * 15, CAST(GETDATE() AS DATETIME));",
                  "SELECT ROW_NUMBER() OVER (ORDER BY myRestoreHistory.BranchName,",
                  "                                   myRestoreHistory.RestoreDatabase,",
                  "                                   myRestoreHistory.Common_Date_RestoreRef DESC,",
                  "                                   myRestoreHistory.Common_Time_RestoreRef DESC",
                  "                         ) AS RowNumber,",
                  "       Common_BranchRef,",
                  "       CONCAT( Common_BranchRef, '_', myRestoreHistory.RestoreDatabase ) AS BranchRestoreDatabase,",
                  "       RestoreDatabase,",
                  "       RestoreUsername,",
                  "       Common_Date_RestoreRef,",
                  "       Common_Time_RestoreRef,",
                  "       BackupSetId,",
                  "       OriginalMachineName,",
                  "       OriginalServerName,",
                  "       OriginalDatabase,",
                  "       OriginalRecoveryModel,",
                  "       OriginalBackupName,",
                  "       MaintranceBackup_OriginalBackupTypeRef,",
                  "       Common_Date_OriginalBackupStartRef,",
                  "       Common_Time_OriginalBackupStartRef,",
                  "       OriginalCompressedBackupSize,",
                  "       CASE",
                  "           WHEN Diffrence_Last_Backup_Restore_second / (60 * 60 * 24) > 0 THEN",
                  "               CONCAT( Diffrence_Last_Backup_Restore_day, ' day(s)' )",
                  "           WHEN Diffrence_Last_Backup_Restore_second / (60 * 60) > 0 THEN",
                  "               CONCAT( Diffrence_Last_Backup_Restore_hour, ' hour(s)' )",
                  "           WHEN Diffrence_Last_Backup_Restore_second / 60 > 0 THEN",
                  "               CONCAT( Diffrence_Last_Backup_Restore_minute, ' minute(s)' )",
                  "           WHEN Diffrence_Last_Backup_Restore_second > 0 THEN",
                  "               CONCAT( Diffrence_Last_Backup_Restore_second, ' second(s)' )",
                  "           ELSE '0'",
                  "       END AS Diffrence_Last_Backup_Restore,",
                  "       CASE",
                  "           WHEN myRestoreHistory.OriginalRecoveryModel = 'SIMPLE' THEN",
                  "               CASE",
                  "                   WHEN ABS(Diffrence_Last_Backup_Restore_second) >= 0",
                  "                        AND ABS(Diffrence_Last_Backup_Restore_second) < (60 * 60 * 25) THEN 'LightGreen'",
                  "                   ELSE 'Red'",
                  "               END",
                  "           --===============",
                  "           WHEN myRestoreHistory.OriginalRecoveryModel = 'BULK-LOGGED' THEN",
                  "               CASE",
                  "                   WHEN ABS(Diffrence_Last_Backup_Restore_second) >= 0",
                  "                        AND ABS(Diffrence_Last_Backup_Restore_second) < (60 * 60 * 1) THEN 'LightGreen'",
                  "                   WHEN ABS(Diffrence_Last_Backup_Restore_second) >= (60 * 60 * 1)",
                  "                        AND ABS(Diffrence_Last_Backup_Restore_second) < (60 * 60 * 2) THEN 'Orange'",
                  "                   WHEN ABS(Diffrence_Last_Backup_Restore_second) >= (60 * 60 * 2)",
                  "                        AND ABS(Diffrence_Last_Backup_Restore_second) < (60 * 60 * 3) THEN 'Yellow'",
                  "                   ELSE 'Red'",
                  "               END",
                  "           --===============",
                  "           WHEN myRestoreHistory.OriginalRecoveryModel = 'FULL' THEN",
                  "               CASE",
                  "                   WHEN ABS(Diffrence_Last_Backup_Restore_second) >= 0",
                  "                        AND ABS(Diffrence_Last_Backup_Restore_second) < (60 * 20 * 1) THEN 'LightGreen'",
                  "                   WHEN ABS(Diffrence_Last_Backup_Restore_second) >= (60 * 20 * 1)",
                  "                        AND ABS(Diffrence_Last_Backup_Restore_second) < (60 * 20 * 2) THEN 'Orange'",
                  "                   WHEN ABS(Diffrence_Last_Backup_Restore_second) >= (60 * 20 * 2)",
                  "                        AND ABS(Diffrence_Last_Backup_Restore_second) < (60 * 20 * 4) THEN 'Yellow'",
                  "                   ELSE 'Red'",
                  "               END",
                  "       END AS StatusColor",
                  "FROM",
                  "(",
                  "    SELECT myRestoreHistory.ID,",
                  "           ROW_NUMBER() OVER (PARTITION BY myRestoreHistory.Common_BranchRef,",
                  "                                           myRestoreHistory.RestoreDatabase",
                  "                              ORDER BY myRestoreHistory.InsertDatetime",
                  "                             ) AS RowNumber,",
                  "           myBranch.BranchName,",
                  "           myRestoreHistory.Common_BranchRef,",
                  "           myRestoreHistory.RestoreDatabase,",
                  "           myRestoreHistory.RestoreUsername,",
                  "           myRestoreHistory.Common_Date_RestoreRef,",
                  "           myRestoreHistory.Common_Time_RestoreRef,",
                  "           myRestoreHistory.BackupSetId,",
                  "           myRestoreHistory.OriginalMachineName,",
                  "           myRestoreHistory.OriginalServerName,",
                  "           myRestoreHistory.OriginalDatabase,",
                  "           myRestoreHistory.OriginalRecoveryModel,",
                  "           myRestoreHistory.OriginalBackupName,",
                  "           myRestoreHistory.MaintranceBackup_OriginalBackupTypeRef,",
                  "           myRestoreHistory.Common_Date_OriginalBackupStartRef,",
                  "           myRestoreHistory.Common_Time_OriginalBackupStartRef,",
                  "           myRestoreHistory.OriginalCompressedBackupSize,",
                  "           myRestoreHistory.OriginalBackupDatetime,",
                  "           CASE",
                  "               WHEN myRestoreHistory.HasLastBackupRestoreForDR = 1 THEN",
                  "                   DATEDIFF( DAY, myRestoreHistory.OriginalBackupDatetime, @myDatetime )",
                  "           END AS Diffrence_Last_Backup_Restore_day,",
                  "           CASE",
                  "               WHEN myRestoreHistory.HasLastBackupRestoreForDR = 1 THEN",
                  "                   DATEDIFF( HOUR, myRestoreHistory.OriginalBackupDatetime, @myDatetime )",
                  "           END AS Diffrence_Last_Backup_Restore_hour,",
                  "           CASE",
                  "               WHEN myRestoreHistory.HasLastBackupRestoreForDR = 1 THEN",
                  "                   DATEDIFF( MINUTE, myRestoreHistory.OriginalBackupDatetime, @myDatetime )",
                  "           END AS Diffrence_Last_Backup_Restore_minute,",
                  "           CASE",
                  "               WHEN myRestoreHistory.HasLastBackupRestoreForDR = 1 THEN",
                  "                   DATEDIFF( SECOND, myRestoreHistory.OriginalBackupDatetime, @myDatetime )",
                  "           END AS Diffrence_Last_Backup_Restore_second",
                  "    FROM MaintranceBackup.RestoreHistory AS myRestoreHistory WITH (READPAST)",
                  "    INNER JOIN Common.Branch AS myBranch WITH (READPAST) ON myBranch.ID = myRestoreHistory.Common_BranchRef",
                  "    WHERE myBranch.Enabled = 1",
                  "          AND HasLastBackupRestoreForDR = 1",
                  ") AS myRestoreHistory",
                  "WHERE myRestoreHistory.RowNumber = 1;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "DECLARE @myDatetime DATETIME;",
              "SET @myDatetime = DATEADD( MINUTE, -1 * 15, CAST(GETDATE() AS DATETIME));",
              "SELECT ROW_NUMBER() OVER (ORDER BY myRestoreHistory.BranchName,",
              "                                   myRestoreHistory.RestoreDatabase,",
              "                                   myRestoreHistory.Common_Date_RestoreRef DESC,",
              "                                   myRestoreHistory.Common_Time_RestoreRef DESC",
              "                         ) AS RowNumber,",
              "       Common_BranchRef,",
              "       CONCAT( Common_BranchRef, '_', myRestoreHistory.RestoreDatabase ) AS BranchRestoreDatabase,",
              "       RestoreDatabase,",
              "       RestoreUsername,",
              "       Common_Date_RestoreRef,",
              "       Common_Time_RestoreRef,",
              "       BackupSetId,",
              "       OriginalMachineName,",
              "       OriginalServerName,",
              "       OriginalDatabase,",
              "       OriginalRecoveryModel,",
              "       OriginalBackupName,",
              "       MaintranceBackup_OriginalBackupTypeRef,",
              "       Common_Date_OriginalBackupStartRef,",
              "       Common_Time_OriginalBackupStartRef,",
              "       OriginalCompressedBackupSize,",
              "       CASE",
              "           WHEN Diffrence_Last_Backup_Restore_second / (60 * 60 * 24) > 0 THEN",
              "               CONCAT( Diffrence_Last_Backup_Restore_day, ' day(s)' )",
              "           WHEN Diffrence_Last_Backup_Restore_second / (60 * 60) > 0 THEN",
              "               CONCAT( Diffrence_Last_Backup_Restore_hour, ' hour(s)' )",
              "           WHEN Diffrence_Last_Backup_Restore_second / 60 > 0 THEN",
              "               CONCAT( Diffrence_Last_Backup_Restore_minute, ' minute(s)' )",
              "           WHEN Diffrence_Last_Backup_Restore_second > 0 THEN",
              "               CONCAT( Diffrence_Last_Backup_Restore_second, ' second(s)' )",
              "           ELSE '0'",
              "       END AS Diffrence_Last_Backup_Restore,",
              "       CASE",
              "           WHEN myRestoreHistory.OriginalRecoveryModel = 'SIMPLE' THEN",
              "               CASE",
              "                   WHEN ABS(Diffrence_Last_Backup_Restore_second) >= 0",
              "                        AND ABS(Diffrence_Last_Backup_Restore_second) < (60 * 60 * 25) THEN 'LightGreen'",
              "                   ELSE 'Red'",
              "               END",
              "           --===============",
              "           WHEN myRestoreHistory.OriginalRecoveryModel = 'BULK-LOGGED' THEN",
              "               CASE",
              "                   WHEN ABS(Diffrence_Last_Backup_Restore_second) >= 0",
              "                        AND ABS(Diffrence_Last_Backup_Restore_second) < (60 * 60 * 1) THEN 'LightGreen'",
              "                   WHEN ABS(Diffrence_Last_Backup_Restore_second) >= (60 * 60 * 1)",
              "                        AND ABS(Diffrence_Last_Backup_Restore_second) < (60 * 60 * 2) THEN 'Orange'",
              "                   WHEN ABS(Diffrence_Last_Backup_Restore_second) >= (60 * 60 * 2)",
              "                        AND ABS(Diffrence_Last_Backup_Restore_second) < (60 * 60 * 3) THEN 'Yellow'",
              "                   ELSE 'Red'",
              "               END",
              "           --===============",
              "           WHEN myRestoreHistory.OriginalRecoveryModel = 'FULL' THEN",
              "               CASE",
              "                   WHEN ABS(Diffrence_Last_Backup_Restore_second) >= 0",
              "                        AND ABS(Diffrence_Last_Backup_Restore_second) < (60 * 20 * 1) THEN 'LightGreen'",
              "                   WHEN ABS(Diffrence_Last_Backup_Restore_second) >= (60 * 20 * 1)",
              "                        AND ABS(Diffrence_Last_Backup_Restore_second) < (60 * 20 * 2) THEN 'Orange'",
              "                   WHEN ABS(Diffrence_Last_Backup_Restore_second) >= (60 * 20 * 2)",
              "                        AND ABS(Diffrence_Last_Backup_Restore_second) < (60 * 20 * 4) THEN 'Yellow'",
              "                   ELSE 'Red'",
              "               END",
              "       END AS StatusColor",
              "FROM",
              "(",
              "    SELECT myRestoreHistory.ID,",
              "           ROW_NUMBER() OVER (PARTITION BY myRestoreHistory.Common_BranchRef,",
              "                                           myRestoreHistory.RestoreDatabase",
              "                              ORDER BY myRestoreHistory.InsertDatetime",
              "                             ) AS RowNumber,",
              "           myBranch.BranchName,",
              "           myRestoreHistory.Common_BranchRef,",
              "           myRestoreHistory.RestoreDatabase,",
              "           myRestoreHistory.RestoreUsername,",
              "           myRestoreHistory.Common_Date_RestoreRef,",
              "           myRestoreHistory.Common_Time_RestoreRef,",
              "           myRestoreHistory.BackupSetId,",
              "           myRestoreHistory.OriginalMachineName,",
              "           myRestoreHistory.OriginalServerName,",
              "           myRestoreHistory.OriginalDatabase,",
              "           myRestoreHistory.OriginalRecoveryModel,",
              "           myRestoreHistory.OriginalBackupName,",
              "           myRestoreHistory.MaintranceBackup_OriginalBackupTypeRef,",
              "           myRestoreHistory.Common_Date_OriginalBackupStartRef,",
              "           myRestoreHistory.Common_Time_OriginalBackupStartRef,",
              "           myRestoreHistory.OriginalCompressedBackupSize,",
              "           myRestoreHistory.OriginalBackupDatetime,",
              "           CASE",
              "               WHEN myRestoreHistory.HasLastBackupRestoreForDR = 1 THEN",
              "                   DATEDIFF( DAY, myRestoreHistory.OriginalBackupDatetime, @myDatetime )",
              "           END AS Diffrence_Last_Backup_Restore_day,",
              "           CASE",
              "               WHEN myRestoreHistory.HasLastBackupRestoreForDR = 1 THEN",
              "                   DATEDIFF( HOUR, myRestoreHistory.OriginalBackupDatetime, @myDatetime )",
              "           END AS Diffrence_Last_Backup_Restore_hour,",
              "           CASE",
              "               WHEN myRestoreHistory.HasLastBackupRestoreForDR = 1 THEN",
              "                   DATEDIFF( MINUTE, myRestoreHistory.OriginalBackupDatetime, @myDatetime )",
              "           END AS Diffrence_Last_Backup_Restore_minute,",
              "           CASE",
              "               WHEN myRestoreHistory.HasLastBackupRestoreForDR = 1 THEN",
              "                   DATEDIFF( SECOND, myRestoreHistory.OriginalBackupDatetime, @myDatetime )",
              "           END AS Diffrence_Last_Backup_Restore_second",
              "    FROM MaintranceBackup.RestoreHistory AS myRestoreHistory WITH (READPAST)",
              "    INNER JOIN Common.Branch AS myBranch WITH (READPAST) ON myBranch.ID = myRestoreHistory.Common_BranchRef",
              "    WHERE myBranch.Enabled = 1",
              "          AND HasLastBackupRestoreForDR = 1",
              ") AS myRestoreHistory",
              "WHERE myRestoreHistory.RowNumber = 1;"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "RestoreHistoryHeader"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>DECLARE @myDatetime DATETIME;",
              "SET @myDatetime = DATEADD( MINUTE, -1 * 15, CAST(GETDATE() AS DATETIME));",
              "SELECT ROW_NUMBER() OVER (ORDER BY myRestoreHistory.BranchName,",
              "                                   myRestoreHistory.RestoreDatabase,",
              "                                   myRestoreHistory.Common_Date_RestoreRef DESC,",
              "                                   myRestoreHistory.Common_Time_RestoreRef DESC",
              "                         ) AS RowNumber,",
              "       Common_BranchRef,",
              "       CONCAT( Common_BranchRef, '_', myRestoreHistory.RestoreDatabase ) AS BranchRestoreDatabase,",
              "       RestoreDatabase,",
              "       RestoreUsername,",
              "       Common_Date_RestoreRef,",
              "       Common_Time_RestoreRef,",
              "       BackupSetId,",
              "       OriginalMachineName,",
              "       OriginalServerName,",
              "       OriginalDatabase,",
              "       OriginalRecoveryModel,",
              "       OriginalBackupName,",
              "       MaintranceBackup_OriginalBackupTypeRef,",
              "       Common_Date_OriginalBackupStartRef,",
              "       Common_Time_OriginalBackupStartRef,",
              "       OriginalCompressedBackupSize,",
              "       CASE",
              "           WHEN Diffrence_Last_Backup_Restore_second / (60 * 60 * 24) > 0 THEN",
              "               CONCAT( Diffrence_Last_Backup_Restore_day, ' day(s)' )",
              "           WHEN Diffrence_Last_Backup_Restore_second / (60 * 60) > 0 THEN",
              "               CONCAT( Diffrence_Last_Backup_Restore_hour, ' hour(s)' )",
              "           WHEN Diffrence_Last_Backup_Restore_second / 60 > 0 THEN",
              "               CONCAT( Diffrence_Last_Backup_Restore_minute, ' minute(s)' )",
              "           WHEN Diffrence_Last_Backup_Restore_second > 0 THEN",
              "               CONCAT( Diffrence_Last_Backup_Restore_second, ' second(s)' )",
              "           ELSE '0'",
              "       END AS Diffrence_Last_Backup_Restore,",
              "       CASE",
              "           WHEN myRestoreHistory.OriginalRecoveryModel = 'SIMPLE' THEN",
              "               CASE",
              "                   WHEN ABS(Diffrence_Last_Backup_Restore_second) >= 0",
              "                        AND ABS(Diffrence_Last_Backup_Restore_second) < (60 * 60 * 25) THEN 'LightGreen'",
              "                   ELSE 'Red'",
              "               END",
              "           --===============",
              "           WHEN myRestoreHistory.OriginalRecoveryModel = 'BULK-LOGGED' THEN",
              "               CASE",
              "                   WHEN ABS(Diffrence_Last_Backup_Restore_second) >= 0",
              "                        AND ABS(Diffrence_Last_Backup_Restore_second) < (60 * 60 * 1) THEN 'LightGreen'",
              "                   WHEN ABS(Diffrence_Last_Backup_Restore_second) >= (60 * 60 * 1)",
              "                        AND ABS(Diffrence_Last_Backup_Restore_second) < (60 * 60 * 2) THEN 'Orange'",
              "                   WHEN ABS(Diffrence_Last_Backup_Restore_second) >= (60 * 60 * 2)",
              "                        AND ABS(Diffrence_Last_Backup_Restore_second) < (60 * 60 * 3) THEN 'Yellow'",
              "                   ELSE 'Red'",
              "               END",
              "           --===============",
              "           WHEN myRestoreHistory.OriginalRecoveryModel = 'FULL' THEN",
              "               CASE",
              "                   WHEN ABS(Diffrence_Last_Backup_Restore_second) >= 0",
              "                        AND ABS(Diffrence_Last_Backup_Restore_second) < (60 * 20 * 1) THEN 'LightGreen'",
              "                   WHEN ABS(Diffrence_Last_Backup_Restore_second) >= (60 * 20 * 1)",
              "                        AND ABS(Diffrence_Last_Backup_Restore_second) < (60 * 20 * 2) THEN 'Orange'",
              "                   WHEN ABS(Diffrence_Last_Backup_Restore_second) >= (60 * 20 * 2)",
              "                        AND ABS(Diffrence_Last_Backup_Restore_second) < (60 * 20 * 4) THEN 'Yellow'",
              "                   ELSE 'Red'",
              "               END",
              "       END AS StatusColor",
              "FROM",
              "(",
              "    SELECT myRestoreHistory.ID,",
              "           ROW_NUMBER() OVER (PARTITION BY myRestoreHistory.Common_BranchRef,",
              "                                           myRestoreHistory.RestoreDatabase",
              "                              ORDER BY myRestoreHistory.InsertDatetime",
              "                             ) AS RowNumber,",
              "           myBranch.BranchName,",
              "           myRestoreHistory.Common_BranchRef,",
              "           myRestoreHistory.RestoreDatabase,",
              "           myRestoreHistory.RestoreUsername,",
              "           myRestoreHistory.Common_Date_RestoreRef,",
              "           myRestoreHistory.Common_Time_RestoreRef,",
              "           myRestoreHistory.BackupSetId,",
              "           myRestoreHistory.OriginalMachineName,",
              "           myRestoreHistory.OriginalServerName,",
              "           myRestoreHistory.OriginalDatabase,",
              "           myRestoreHistory.OriginalRecoveryModel,",
              "           myRestoreHistory.OriginalBackupName,",
              "           myRestoreHistory.MaintranceBackup_OriginalBackupTypeRef,",
              "           myRestoreHistory.Common_Date_OriginalBackupStartRef,",
              "           myRestoreHistory.Common_Time_OriginalBackupStartRef,",
              "           myRestoreHistory.OriginalCompressedBackupSize,",
              "           myRestoreHistory.OriginalBackupDatetime,",
              "           CASE",
              "               WHEN myRestoreHistory.HasLastBackupRestoreForDR = 1 THEN",
              "                   DATEDIFF( DAY, myRestoreHistory.OriginalBackupDatetime, @myDatetime )",
              "           END AS Diffrence_Last_Backup_Restore_day,",
              "           CASE",
              "               WHEN myRestoreHistory.HasLastBackupRestoreForDR = 1 THEN",
              "                   DATEDIFF( HOUR, myRestoreHistory.OriginalBackupDatetime, @myDatetime )",
              "           END AS Diffrence_Last_Backup_Restore_hour,",
              "           CASE",
              "               WHEN myRestoreHistory.HasLastBackupRestoreForDR = 1 THEN",
              "                   DATEDIFF( MINUTE, myRestoreHistory.OriginalBackupDatetime, @myDatetime )",
              "           END AS Diffrence_Last_Backup_Restore_minute,",
              "           CASE",
              "               WHEN myRestoreHistory.HasLastBackupRestoreForDR = 1 THEN",
              "                   DATEDIFF( SECOND, myRestoreHistory.OriginalBackupDatetime, @myDatetime )",
              "           END AS Diffrence_Last_Backup_Restore_second",
              "    FROM MaintranceBackup.RestoreHistory AS myRestoreHistory WITH (READPAST)",
              "    INNER JOIN Common.Branch AS myBranch WITH (READPAST) ON myBranch.ID = myRestoreHistory.Common_BranchRef",
              "    WHERE myBranch.Enabled = 1",
              "          AND HasLastBackupRestoreForDR = 1",
              ") AS myRestoreHistory",
              "WHERE myRestoreHistory.RowNumber = 1;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "DimDate_Header_Restore",
        "columns": [
          {
            "name": "ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID",
            "sourceProviderType": "Integer"
          },
          {
            "name": "GregorianDate",
            "dataType": "dateTime",
            "sourceColumn": "GregorianDate",
            "formatString": "General Date",
            "sourceProviderType": "DBDate"
          },
          {
            "name": "PersianYearInt",
            "dataType": "int64",
            "sourceColumn": "PersianYearInt",
            "sourceProviderType": "SmallInt"
          },
          {
            "name": "PersianMonthNo",
            "dataType": "int64",
            "sourceColumn": "PersianMonthNo",
            "sourceProviderType": "UnsignedTinyInt"
          },
          {
            "name": "PersianDayInMonth",
            "dataType": "int64",
            "sourceColumn": "PersianDayInMonth",
            "sourceProviderType": "UnsignedTinyInt"
          },
          {
            "name": "PersianDayOfWeekInt",
            "dataType": "int64",
            "sourceColumn": "PersianDayOfWeekInt",
            "sourceProviderType": "UnsignedTinyInt"
          },
          {
            "name": "PersianDate",
            "dataType": "string",
            "sourceColumn": "PersianDate",
            "sortByColumn": "ID_Sort_Desc",
            "sourceProviderType": "Char"
          },
          {
            "name": "PersianYearMonthInt",
            "dataType": "int64",
            "sourceColumn": "PersianYearMonthInt",
            "sourceProviderType": "Integer"
          },
          {
            "name": "PersianYearMonthStr",
            "dataType": "string",
            "sourceColumn": "PersianYearMonthStr",
            "sourceProviderType": "Char"
          },
          {
            "name": "PersianWeekOfMonthNo",
            "dataType": "int64",
            "sourceColumn": "PersianWeekOfMonthNo",
            "sourceProviderType": "Integer"
          },
          {
            "name": "PersianWeekOfYearNo",
            "dataType": "int64",
            "sourceColumn": "PersianWeekOfYearNo",
            "sourceProviderType": "Integer"
          },
          {
            "name": "PersianSeasonInt",
            "dataType": "int64",
            "sourceColumn": "PersianSeasonInt",
            "sourceProviderType": "Integer"
          },
          {
            "name": "PersianMonthName",
            "dataType": "string",
            "sourceColumn": "PersianMonthName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "PersianDayOfWeekName",
            "dataType": "string",
            "sourceColumn": "PersianDayOfWeekName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "PersianWeekOfMonthName",
            "dataType": "string",
            "sourceColumn": "PersianWeekOfMonthName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "PersianWeekOfYearName",
            "dataType": "string",
            "sourceColumn": "PersianWeekOfYearName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "PersianSeason",
            "dataType": "string",
            "sourceColumn": "PersianSeason",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ID_Sort_Desc",
            "dataType": "int64",
            "sourceColumn": "ID_Sort_Desc"
          }
        ],
        "partitions": [
          {
            "name": "DimDate_Restore",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "DECLARE @myMinID INT",
                "DECLARE @myMaxID INT",
                "SELECT @myMinID = MIN( Common_Date_RestoreRef ),@myMaxID = MAX( Common_Date_RestoreRef ) FROM MaintranceBackup.RestoreHistory WITH (READPAST) WHERE HasLastBackupRestoreForDR = 1",
                "SELECT ID,",
                "       ID * -1 AS ID_Sort_Desc,",
                "       GregorianDate,",
                "       PersianDate,",
                "       PersianYearInt,",
                "       PersianMonthNo,",
                "       PersianDayInMonth,",
                "       PersianDayOfWeekInt,",
                "       PersianYearMonthInt,",
                "       PersianYearMonthStr,",
                "       PersianWeekOfMonthNo,",
                "       PersianWeekOfYearNo,",
                "       PersianSeasonInt,",
                "       PersianMonthName,",
                "       PersianDayOfWeekName,",
                "       PersianWeekOfMonthName,",
                "       PersianWeekOfYearName,",
                "       PersianSeason",
                "FROM [Common].[DimDate] WITH (READPAST)",
                "WHERE ID >= @myMinID",
                "      AND ID <= @myMaxID;"
              ],
              "dataSource": "OLE-Monitor_MaintranceMonitoring"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>DECLARE @myMinID INT",
                  "DECLARE @myMaxID INT",
                  "SELECT @myMinID = MIN( Common_Date_RestoreRef ),@myMaxID = MAX( Common_Date_RestoreRef ) FROM MaintranceBackup.RestoreHistory WITH (READPAST) WHERE HasLastBackupRestoreForDR = 1",
                  "SELECT ID,",
                  "       ID * -1 AS ID_Sort_Desc,",
                  "       GregorianDate,",
                  "       PersianDate,",
                  "       PersianYearInt,",
                  "       PersianMonthNo,",
                  "       PersianDayInMonth,",
                  "       PersianDayOfWeekInt,",
                  "       PersianYearMonthInt,",
                  "       PersianYearMonthStr,",
                  "       PersianWeekOfMonthNo,",
                  "       PersianWeekOfYearNo,",
                  "       PersianSeasonInt,",
                  "       PersianMonthName,",
                  "       PersianDayOfWeekName,",
                  "       PersianWeekOfMonthName,",
                  "       PersianWeekOfYearName,",
                  "       PersianSeason",
                  "FROM [Common].[DimDate] WITH (READPAST)",
                  "WHERE ID >= @myMinID",
                  "      AND ID <= @myMaxID;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "DECLARE @myMinID INT",
              "DECLARE @myMaxID INT",
              "SELECT @myMinID = MIN( Common_Date_RestoreRef ),@myMaxID = MAX( Common_Date_RestoreRef ) FROM MaintranceBackup.RestoreHistory WITH (READPAST) WHERE HasLastBackupRestoreForDR = 1",
              "SELECT ID,",
              "       ID * -1 AS ID_Sort_Desc,",
              "       GregorianDate,",
              "       PersianDate,",
              "       PersianYearInt,",
              "       PersianMonthNo,",
              "       PersianDayInMonth,",
              "       PersianDayOfWeekInt,",
              "       PersianYearMonthInt,",
              "       PersianYearMonthStr,",
              "       PersianWeekOfMonthNo,",
              "       PersianWeekOfYearNo,",
              "       PersianSeasonInt,",
              "       PersianMonthName,",
              "       PersianDayOfWeekName,",
              "       PersianWeekOfMonthName,",
              "       PersianWeekOfYearName,",
              "       PersianSeason",
              "FROM [Common].[DimDate] WITH (READPAST)",
              "WHERE ID >= @myMinID",
              "      AND ID <= @myMaxID;"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "DimDate"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Common"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>DECLARE @myMinID INT",
              "DECLARE @myMaxID INT",
              "SELECT @myMinID = MIN( Common_Date_RestoreRef ),@myMaxID = MAX( Common_Date_RestoreRef ) FROM MaintranceBackup.RestoreHistory WITH (READPAST) WHERE HasLastBackupRestoreForDR = 1",
              "SELECT ID,",
              "       ID * -1 AS ID_Sort_Desc,",
              "       GregorianDate,",
              "       PersianDate,",
              "       PersianYearInt,",
              "       PersianMonthNo,",
              "       PersianDayInMonth,",
              "       PersianDayOfWeekInt,",
              "       PersianYearMonthInt,",
              "       PersianYearMonthStr,",
              "       PersianWeekOfMonthNo,",
              "       PersianWeekOfYearNo,",
              "       PersianSeasonInt,",
              "       PersianMonthName,",
              "       PersianDayOfWeekName,",
              "       PersianWeekOfMonthName,",
              "       PersianWeekOfYearName,",
              "       PersianSeason",
              "FROM [Common].[DimDate] WITH (READPAST)",
              "WHERE ID >= @myMinID",
              "      AND ID <= @myMaxID;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "DimTime_Header_Restore",
        "columns": [
          {
            "name": "ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Hour24",
            "dataType": "int64",
            "sourceColumn": "Hour24",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Minute",
            "dataType": "int64",
            "sourceColumn": "Minute",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Second",
            "dataType": "int64",
            "sourceColumn": "Second",
            "sourceProviderType": "Integer"
          },
          {
            "name": "FullTimeString24",
            "dataType": "string",
            "sourceColumn": "FullTimeString24",
            "sourceProviderType": "Char"
          },
          {
            "name": "FullTime",
            "dataType": "dateTime",
            "sourceColumn": "FullTime",
            "formatString": "General Date",
            "sourceProviderType": "145"
          }
        ],
        "partitions": [
          {
            "name": "DimTime_Restore",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "DECLARE @myMinID INT",
                "DECLARE @myMaxID INT",
                "SELECT @myMinID = MIN( Common_Time_RestoreRef ),@myMaxID = MAX( Common_Time_RestoreRef ) FROM MaintranceBackup.RestoreHistory WITH (READPAST) WHERE HasLastBackupRestoreForDR = 1",
                "SELECT ID,",
                "       Hour24,",
                "       Minute,",
                "       Second,",
                "       FullTimeString24,",
                "       FullTime",
                "FROM [Common].[DimTime] WITH (READPAST)",
                "WHERE ID >= @myMinID",
                "      AND ID <= @myMaxID;"
              ],
              "dataSource": "OLE-Monitor_MaintranceMonitoring"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>DECLARE @myMinID INT",
                  "DECLARE @myMaxID INT",
                  "SELECT @myMinID = MIN( Common_Time_RestoreRef ),@myMaxID = MAX( Common_Time_RestoreRef ) FROM MaintranceBackup.RestoreHistory WITH (READPAST) WHERE HasLastBackupRestoreForDR = 1",
                  "SELECT ID,",
                  "       Hour24,",
                  "       Minute,",
                  "       Second,",
                  "       FullTimeString24,",
                  "       FullTime",
                  "FROM [Common].[DimTime] WITH (READPAST)",
                  "WHERE ID >= @myMinID",
                  "      AND ID <= @myMaxID;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "DECLARE @myMinID INT",
              "DECLARE @myMaxID INT",
              "SELECT @myMinID = MIN( Common_Time_RestoreRef ),@myMaxID = MAX( Common_Time_RestoreRef ) FROM MaintranceBackup.RestoreHistory WITH (READPAST) WHERE HasLastBackupRestoreForDR = 1",
              "SELECT ID,",
              "       Hour24,",
              "       Minute,",
              "       Second,",
              "       FullTimeString24,",
              "       FullTime",
              "FROM [Common].[DimTime] WITH (READPAST)",
              "WHERE ID >= @myMinID",
              "      AND ID <= @myMaxID;"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "DimTime"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Common"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>DECLARE @myMinID INT",
              "DECLARE @myMaxID INT",
              "SELECT @myMinID = MIN( Common_Time_RestoreRef ),@myMaxID = MAX( Common_Time_RestoreRef ) FROM MaintranceBackup.RestoreHistory WITH (READPAST) WHERE HasLastBackupRestoreForDR = 1",
              "SELECT ID,",
              "       Hour24,",
              "       Minute,",
              "       Second,",
              "       FullTimeString24,",
              "       FullTime",
              "FROM [Common].[DimTime] WITH (READPAST)",
              "WHERE ID >= @myMinID",
              "      AND ID <= @myMaxID;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "DimDate_Header_Backup",
        "columns": [
          {
            "name": "ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID",
            "sourceProviderType": "Integer"
          },
          {
            "name": "GregorianDate",
            "dataType": "dateTime",
            "sourceColumn": "GregorianDate",
            "formatString": "General Date",
            "sourceProviderType": "DBDate"
          },
          {
            "name": "PersianYearInt",
            "dataType": "int64",
            "sourceColumn": "PersianYearInt",
            "sourceProviderType": "SmallInt"
          },
          {
            "name": "PersianMonthNo",
            "dataType": "int64",
            "sourceColumn": "PersianMonthNo",
            "sourceProviderType": "UnsignedTinyInt"
          },
          {
            "name": "PersianDayInMonth",
            "dataType": "int64",
            "sourceColumn": "PersianDayInMonth",
            "sourceProviderType": "UnsignedTinyInt"
          },
          {
            "name": "PersianDayOfWeekInt",
            "dataType": "int64",
            "sourceColumn": "PersianDayOfWeekInt",
            "sourceProviderType": "UnsignedTinyInt"
          },
          {
            "name": "PersianDate",
            "dataType": "string",
            "sourceColumn": "PersianDate",
            "sortByColumn": "ID_Sort_Desc",
            "sourceProviderType": "Char"
          },
          {
            "name": "PersianYearMonthInt",
            "dataType": "int64",
            "sourceColumn": "PersianYearMonthInt",
            "sourceProviderType": "Integer"
          },
          {
            "name": "PersianYearMonthStr",
            "dataType": "string",
            "sourceColumn": "PersianYearMonthStr",
            "sourceProviderType": "Char"
          },
          {
            "name": "PersianWeekOfMonthNo",
            "dataType": "int64",
            "sourceColumn": "PersianWeekOfMonthNo",
            "sourceProviderType": "Integer"
          },
          {
            "name": "PersianWeekOfYearNo",
            "dataType": "int64",
            "sourceColumn": "PersianWeekOfYearNo",
            "sourceProviderType": "Integer"
          },
          {
            "name": "PersianSeasonInt",
            "dataType": "int64",
            "sourceColumn": "PersianSeasonInt",
            "sourceProviderType": "Integer"
          },
          {
            "name": "PersianMonthName",
            "dataType": "string",
            "sourceColumn": "PersianMonthName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "PersianDayOfWeekName",
            "dataType": "string",
            "sourceColumn": "PersianDayOfWeekName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "PersianWeekOfMonthName",
            "dataType": "string",
            "sourceColumn": "PersianWeekOfMonthName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "PersianWeekOfYearName",
            "dataType": "string",
            "sourceColumn": "PersianWeekOfYearName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "PersianSeason",
            "dataType": "string",
            "sourceColumn": "PersianSeason",
            "sourceProviderType": "WChar"
          },
          {
            "name": "ID_Sort_Desc",
            "dataType": "int64",
            "sourceColumn": "ID_Sort_Desc"
          }
        ],
        "partitions": [
          {
            "name": "DimDate_HeaderBackup",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "DECLARE @myMinID INT",
                "DECLARE @myMaxID INT",
                "SELECT @myMinID = MIN( Common_Date_OriginalBackupStartRef ),@myMaxID = MAX( Common_Date_OriginalBackupStartRef ) FROM MaintranceBackup.RestoreHistory WITH (READPAST) WHERE HasLastBackupRestoreForDR = 1",
                "SELECT ID,",
                "       ID * -1 AS ID_Sort_Desc,",
                "       GregorianDate,",
                "       PersianDate,",
                "       PersianYearInt,",
                "       PersianMonthNo,",
                "       PersianDayInMonth,",
                "       PersianDayOfWeekInt,",
                "       PersianYearMonthInt,",
                "       PersianYearMonthStr,",
                "       PersianWeekOfMonthNo,",
                "       PersianWeekOfYearNo,",
                "       PersianSeasonInt,",
                "       PersianMonthName,",
                "       PersianDayOfWeekName,",
                "       PersianWeekOfMonthName,",
                "       PersianWeekOfYearName,",
                "       PersianSeason",
                "FROM [Common].[DimDate] WITH (READPAST)",
                "WHERE ID >= @myMinID",
                "      AND ID <= @myMaxID;"
              ],
              "dataSource": "OLE-Monitor_MaintranceMonitoring"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>DECLARE @myMinID INT",
                  "DECLARE @myMaxID INT",
                  "SELECT @myMinID = MIN( Common_Date_OriginalBackupStartRef ),@myMaxID = MAX( Common_Date_OriginalBackupStartRef ) FROM MaintranceBackup.RestoreHistory WITH (READPAST) WHERE HasLastBackupRestoreForDR = 1",
                  "SELECT ID,",
                  "       ID * -1 AS ID_Sort_Desc,",
                  "       GregorianDate,",
                  "       PersianDate,",
                  "       PersianYearInt,",
                  "       PersianMonthNo,",
                  "       PersianDayInMonth,",
                  "       PersianDayOfWeekInt,",
                  "       PersianYearMonthInt,",
                  "       PersianYearMonthStr,",
                  "       PersianWeekOfMonthNo,",
                  "       PersianWeekOfYearNo,",
                  "       PersianSeasonInt,",
                  "       PersianMonthName,",
                  "       PersianDayOfWeekName,",
                  "       PersianWeekOfMonthName,",
                  "       PersianWeekOfYearName,",
                  "       PersianSeason",
                  "FROM [Common].[DimDate] WITH (READPAST)",
                  "WHERE ID >= @myMinID",
                  "      AND ID <= @myMaxID;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "DECLARE @myMinID INT",
              "DECLARE @myMaxID INT",
              "SELECT @myMinID = MIN( Common_Date_OriginalBackupStartRef ),@myMaxID = MAX( Common_Date_OriginalBackupStartRef ) FROM MaintranceBackup.RestoreHistory WITH (READPAST) WHERE HasLastBackupRestoreForDR = 1",
              "SELECT ID,",
              "       ID * -1 AS ID_Sort_Desc,",
              "       GregorianDate,",
              "       PersianDate,",
              "       PersianYearInt,",
              "       PersianMonthNo,",
              "       PersianDayInMonth,",
              "       PersianDayOfWeekInt,",
              "       PersianYearMonthInt,",
              "       PersianYearMonthStr,",
              "       PersianWeekOfMonthNo,",
              "       PersianWeekOfYearNo,",
              "       PersianSeasonInt,",
              "       PersianMonthName,",
              "       PersianDayOfWeekName,",
              "       PersianWeekOfMonthName,",
              "       PersianWeekOfYearName,",
              "       PersianSeason",
              "FROM [Common].[DimDate] WITH (READPAST)",
              "WHERE ID >= @myMinID",
              "      AND ID <= @myMaxID;"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "DimDate"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Common"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>DECLARE @myMinID INT",
              "DECLARE @myMaxID INT",
              "SELECT @myMinID = MIN( Common_Date_OriginalBackupStartRef ),@myMaxID = MAX( Common_Date_OriginalBackupStartRef ) FROM MaintranceBackup.RestoreHistory WITH (READPAST) WHERE HasLastBackupRestoreForDR = 1",
              "SELECT ID,",
              "       ID * -1 AS ID_Sort_Desc,",
              "       GregorianDate,",
              "       PersianDate,",
              "       PersianYearInt,",
              "       PersianMonthNo,",
              "       PersianDayInMonth,",
              "       PersianDayOfWeekInt,",
              "       PersianYearMonthInt,",
              "       PersianYearMonthStr,",
              "       PersianWeekOfMonthNo,",
              "       PersianWeekOfYearNo,",
              "       PersianSeasonInt,",
              "       PersianMonthName,",
              "       PersianDayOfWeekName,",
              "       PersianWeekOfMonthName,",
              "       PersianWeekOfYearName,",
              "       PersianSeason",
              "FROM [Common].[DimDate] WITH (READPAST)",
              "WHERE ID >= @myMinID",
              "      AND ID <= @myMaxID;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "DimTime_Header_Backup",
        "columns": [
          {
            "name": "ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Hour24",
            "dataType": "int64",
            "sourceColumn": "Hour24",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Minute",
            "dataType": "int64",
            "sourceColumn": "Minute",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Second",
            "dataType": "int64",
            "sourceColumn": "Second",
            "sourceProviderType": "Integer"
          },
          {
            "name": "FullTimeString24",
            "dataType": "string",
            "sourceColumn": "FullTimeString24",
            "sourceProviderType": "Char"
          },
          {
            "name": "FullTime",
            "dataType": "dateTime",
            "sourceColumn": "FullTime",
            "formatString": "General Date",
            "sourceProviderType": "145"
          }
        ],
        "partitions": [
          {
            "name": "DimTime_HeaderBackup",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "DECLARE @myMinID INT",
                "DECLARE @myMaxID INT",
                "SELECT @myMinID = MIN( Common_Time_OriginalBackupStartRef ),@myMaxID = MAX( Common_Time_OriginalBackupStartRef ) FROM MaintranceBackup.RestoreHistory WITH (READPAST) WHERE HasLastBackupRestoreForDR = 1",
                "SELECT ID,",
                "       Hour24,",
                "       Minute,",
                "       Second,",
                "       FullTimeString24,",
                "       FullTime",
                "FROM [Common].[DimTime] WITH (READPAST)",
                "WHERE ID >= @myMinID",
                "      AND ID <= @myMaxID;"
              ],
              "dataSource": "OLE-Monitor_MaintranceMonitoring"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>DECLARE @myMinID INT",
                  "DECLARE @myMaxID INT",
                  "SELECT @myMinID = MIN( Common_Time_OriginalBackupStartRef ),@myMaxID = MAX( Common_Time_OriginalBackupStartRef ) FROM MaintranceBackup.RestoreHistory WITH (READPAST) WHERE HasLastBackupRestoreForDR = 1",
                  "SELECT ID,",
                  "       Hour24,",
                  "       Minute,",
                  "       Second,",
                  "       FullTimeString24,",
                  "       FullTime",
                  "FROM [Common].[DimTime] WITH (READPAST)",
                  "WHERE ID >= @myMinID",
                  "      AND ID <= @myMaxID;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "DECLARE @myMinID INT",
              "DECLARE @myMaxID INT",
              "SELECT @myMinID = MIN( Common_Time_OriginalBackupStartRef ),@myMaxID = MAX( Common_Time_OriginalBackupStartRef ) FROM MaintranceBackup.RestoreHistory WITH (READPAST) WHERE HasLastBackupRestoreForDR = 1",
              "SELECT ID,",
              "       Hour24,",
              "       Minute,",
              "       Second,",
              "       FullTimeString24,",
              "       FullTime",
              "FROM [Common].[DimTime] WITH (READPAST)",
              "WHERE ID >= @myMinID",
              "      AND ID <= @myMaxID;"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "DimTime"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "Common"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>DECLARE @myMinID INT",
              "DECLARE @myMaxID INT",
              "SELECT @myMinID = MIN( Common_Time_OriginalBackupStartRef ),@myMaxID = MAX( Common_Time_OriginalBackupStartRef ) FROM MaintranceBackup.RestoreHistory WITH (READPAST) WHERE HasLastBackupRestoreForDR = 1",
              "SELECT ID,",
              "       Hour24,",
              "       Minute,",
              "       Second,",
              "       FullTimeString24,",
              "       FullTime",
              "FROM [Common].[DimTime] WITH (READPAST)",
              "WHERE ID >= @myMinID",
              "      AND ID <= @myMaxID;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "DimDate_Details_Restore",
        "columns": [
          {
            "name": "ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID",
            "sourceProviderType": "Integer"
          },
          {
            "name": "ID_Sort_Desc",
            "dataType": "int64",
            "sourceColumn": "ID_Sort_Desc"
          },
          {
            "name": "GregorianDate",
            "dataType": "dateTime",
            "sourceColumn": "GregorianDate",
            "formatString": "General Date",
            "sourceProviderType": "DBDate"
          },
          {
            "name": "PersianDate",
            "dataType": "string",
            "sourceColumn": "PersianDate",
            "sortByColumn": "ID_Sort_Desc",
            "sourceProviderType": "Char"
          },
          {
            "name": "PersianYearInt",
            "dataType": "int64",
            "sourceColumn": "PersianYearInt",
            "sourceProviderType": "SmallInt"
          },
          {
            "name": "PersianMonthNo",
            "dataType": "int64",
            "sourceColumn": "PersianMonthNo",
            "sourceProviderType": "UnsignedTinyInt"
          },
          {
            "name": "PersianDayInMonth",
            "dataType": "int64",
            "sourceColumn": "PersianDayInMonth",
            "sourceProviderType": "UnsignedTinyInt"
          },
          {
            "name": "PersianDayOfWeekInt",
            "dataType": "int64",
            "sourceColumn": "PersianDayOfWeekInt",
            "sourceProviderType": "UnsignedTinyInt"
          },
          {
            "name": "PersianYearMonthInt",
            "dataType": "int64",
            "sourceColumn": "PersianYearMonthInt",
            "sourceProviderType": "Integer"
          },
          {
            "name": "PersianYearMonthStr",
            "dataType": "string",
            "sourceColumn": "PersianYearMonthStr",
            "sourceProviderType": "Char"
          },
          {
            "name": "PersianWeekOfMonthNo",
            "dataType": "int64",
            "sourceColumn": "PersianWeekOfMonthNo",
            "sourceProviderType": "Integer"
          },
          {
            "name": "PersianWeekOfYearNo",
            "dataType": "int64",
            "sourceColumn": "PersianWeekOfYearNo",
            "sourceProviderType": "Integer"
          },
          {
            "name": "PersianSeasonInt",
            "dataType": "int64",
            "sourceColumn": "PersianSeasonInt",
            "sourceProviderType": "Integer"
          },
          {
            "name": "PersianMonthName",
            "dataType": "string",
            "sourceColumn": "PersianMonthName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "PersianDayOfWeekName",
            "dataType": "string",
            "sourceColumn": "PersianDayOfWeekName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "PersianWeekOfMonthName",
            "dataType": "string",
            "sourceColumn": "PersianWeekOfMonthName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "PersianWeekOfYearName",
            "dataType": "string",
            "sourceColumn": "PersianWeekOfYearName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "PersianSeason",
            "dataType": "string",
            "sourceColumn": "PersianSeason",
            "sourceProviderType": "WChar"
          }
        ],
        "partitions": [
          {
            "name": "DimDate_Details_Restore",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "DECLARE @myMinID INT",
                "DECLARE @myMaxID INT",
                "SELECT @myMinID = MIN( Common_Date_RestoreRef ),@myMaxID = MAX(Common_Date_RestoreRef ) FROM MaintranceBackup.RestoreHistory WITH (READPAST) WHERE HasLastBackupRestoreForDR = 0",
                "SELECT ID,",
                "       ID * -1 AS ID_Sort_Desc,",
                "       GregorianDate,",
                "       PersianDate,",
                "       PersianYearInt,",
                "       PersianMonthNo,",
                "       PersianDayInMonth,",
                "       PersianDayOfWeekInt,",
                "       PersianYearMonthInt,",
                "       PersianYearMonthStr,",
                "       PersianWeekOfMonthNo,",
                "       PersianWeekOfYearNo,",
                "       PersianSeasonInt,",
                "       PersianMonthName,",
                "       PersianDayOfWeekName,",
                "       PersianWeekOfMonthName,",
                "       PersianWeekOfYearName,",
                "       PersianSeason",
                "FROM [Common].[DimDate] WITH (READPAST)",
                "WHERE ID >= @myMinID",
                "      AND ID <= @myMaxID;"
              ],
              "dataSource": "OLE-Monitor_MaintranceMonitoring"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>DECLARE @myMinID INT",
                  "DECLARE @myMaxID INT",
                  "SELECT @myMinID = MIN( Common_Date_RestoreRef ),@myMaxID = MAX(Common_Date_RestoreRef ) FROM MaintranceBackup.RestoreHistory WITH (READPAST) WHERE HasLastBackupRestoreForDR = 0",
                  "SELECT ID,",
                  "       ID * -1 AS ID_Sort_Desc,",
                  "       GregorianDate,",
                  "       PersianDate,",
                  "       PersianYearInt,",
                  "       PersianMonthNo,",
                  "       PersianDayInMonth,",
                  "       PersianDayOfWeekInt,",
                  "       PersianYearMonthInt,",
                  "       PersianYearMonthStr,",
                  "       PersianWeekOfMonthNo,",
                  "       PersianWeekOfYearNo,",
                  "       PersianSeasonInt,",
                  "       PersianMonthName,",
                  "       PersianDayOfWeekName,",
                  "       PersianWeekOfMonthName,",
                  "       PersianWeekOfYearName,",
                  "       PersianSeason",
                  "FROM [Common].[DimDate] WITH (READPAST)",
                  "WHERE ID >= @myMinID",
                  "      AND ID <= @myMaxID;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "DECLARE @myMinID INT",
              "DECLARE @myMaxID INT",
              "SELECT @myMinID = MIN( Common_Date_RestoreRef ),@myMaxID = MAX(Common_Date_RestoreRef ) FROM MaintranceBackup.RestoreHistory WITH (READPAST) WHERE HasLastBackupRestoreForDR = 0",
              "SELECT ID,",
              "       ID * -1 AS ID_Sort_Desc,",
              "       GregorianDate,",
              "       PersianDate,",
              "       PersianYearInt,",
              "       PersianMonthNo,",
              "       PersianDayInMonth,",
              "       PersianDayOfWeekInt,",
              "       PersianYearMonthInt,",
              "       PersianYearMonthStr,",
              "       PersianWeekOfMonthNo,",
              "       PersianWeekOfYearNo,",
              "       PersianSeasonInt,",
              "       PersianMonthName,",
              "       PersianDayOfWeekName,",
              "       PersianWeekOfMonthName,",
              "       PersianWeekOfYearName,",
              "       PersianSeason",
              "FROM [Common].[DimDate] WITH (READPAST)",
              "WHERE ID >= @myMinID",
              "      AND ID <= @myMaxID;"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "DimDate_Details_Restore"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>DECLARE @myMinID INT",
              "DECLARE @myMaxID INT",
              "SELECT @myMinID = MIN( Common_Date_RestoreRef ),@myMaxID = MAX(Common_Date_RestoreRef ) FROM MaintranceBackup.RestoreHistory WITH (READPAST) WHERE HasLastBackupRestoreForDR = 0",
              "SELECT ID,",
              "       ID * -1 AS ID_Sort_Desc,",
              "       GregorianDate,",
              "       PersianDate,",
              "       PersianYearInt,",
              "       PersianMonthNo,",
              "       PersianDayInMonth,",
              "       PersianDayOfWeekInt,",
              "       PersianYearMonthInt,",
              "       PersianYearMonthStr,",
              "       PersianWeekOfMonthNo,",
              "       PersianWeekOfYearNo,",
              "       PersianSeasonInt,",
              "       PersianMonthName,",
              "       PersianDayOfWeekName,",
              "       PersianWeekOfMonthName,",
              "       PersianWeekOfYearName,",
              "       PersianSeason",
              "FROM [Common].[DimDate] WITH (READPAST)",
              "WHERE ID >= @myMinID",
              "      AND ID <= @myMaxID;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "DimDate_Details_Backup",
        "columns": [
          {
            "name": "ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID",
            "sourceProviderType": "Integer"
          },
          {
            "name": "ID_Sort_Desc",
            "dataType": "int64",
            "sourceColumn": "ID_Sort_Desc"
          },
          {
            "name": "GregorianDate",
            "dataType": "dateTime",
            "sourceColumn": "GregorianDate",
            "formatString": "General Date",
            "sourceProviderType": "DBDate"
          },
          {
            "name": "PersianDate",
            "dataType": "string",
            "sourceColumn": "PersianDate",
            "sortByColumn": "ID_Sort_Desc",
            "sourceProviderType": "Char"
          },
          {
            "name": "PersianYearInt",
            "dataType": "int64",
            "sourceColumn": "PersianYearInt",
            "sourceProviderType": "SmallInt"
          },
          {
            "name": "PersianMonthNo",
            "dataType": "int64",
            "sourceColumn": "PersianMonthNo",
            "sourceProviderType": "UnsignedTinyInt"
          },
          {
            "name": "PersianDayInMonth",
            "dataType": "int64",
            "sourceColumn": "PersianDayInMonth",
            "sourceProviderType": "UnsignedTinyInt"
          },
          {
            "name": "PersianDayOfWeekInt",
            "dataType": "int64",
            "sourceColumn": "PersianDayOfWeekInt",
            "sourceProviderType": "UnsignedTinyInt"
          },
          {
            "name": "PersianYearMonthInt",
            "dataType": "int64",
            "sourceColumn": "PersianYearMonthInt",
            "sourceProviderType": "Integer"
          },
          {
            "name": "PersianYearMonthStr",
            "dataType": "string",
            "sourceColumn": "PersianYearMonthStr",
            "sourceProviderType": "Char"
          },
          {
            "name": "PersianWeekOfMonthNo",
            "dataType": "int64",
            "sourceColumn": "PersianWeekOfMonthNo",
            "sourceProviderType": "Integer"
          },
          {
            "name": "PersianWeekOfYearNo",
            "dataType": "int64",
            "sourceColumn": "PersianWeekOfYearNo",
            "sourceProviderType": "Integer"
          },
          {
            "name": "PersianSeasonInt",
            "dataType": "int64",
            "sourceColumn": "PersianSeasonInt",
            "sourceProviderType": "Integer"
          },
          {
            "name": "PersianMonthName",
            "dataType": "string",
            "sourceColumn": "PersianMonthName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "PersianDayOfWeekName",
            "dataType": "string",
            "sourceColumn": "PersianDayOfWeekName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "PersianWeekOfMonthName",
            "dataType": "string",
            "sourceColumn": "PersianWeekOfMonthName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "PersianWeekOfYearName",
            "dataType": "string",
            "sourceColumn": "PersianWeekOfYearName",
            "sourceProviderType": "WChar"
          },
          {
            "name": "PersianSeason",
            "dataType": "string",
            "sourceColumn": "PersianSeason",
            "sourceProviderType": "WChar"
          }
        ],
        "partitions": [
          {
            "name": "DimDate_Details_Backup",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "DECLARE @myMinID INT",
                "DECLARE @myMaxID INT",
                "SELECT @myMinID = MIN( Common_Date_OriginalBackupStartRef ),@myMaxID = MAX(Common_Date_OriginalBackupStartRef ) FROM MaintranceBackup.RestoreHistory WITH (READPAST) WHERE HasLastBackupRestoreForDR = 0",
                "SELECT ID,",
                "       ID * -1 AS ID_Sort_Desc,",
                "       GregorianDate,",
                "       PersianDate,",
                "       PersianYearInt,",
                "       PersianMonthNo,",
                "       PersianDayInMonth,",
                "       PersianDayOfWeekInt,",
                "       PersianYearMonthInt,",
                "       PersianYearMonthStr,",
                "       PersianWeekOfMonthNo,",
                "       PersianWeekOfYearNo,",
                "       PersianSeasonInt,",
                "       PersianMonthName,",
                "       PersianDayOfWeekName,",
                "       PersianWeekOfMonthName,",
                "       PersianWeekOfYearName,",
                "       PersianSeason",
                "FROM [Common].[DimDate] WITH (READPAST)",
                "WHERE ID >= @myMinID",
                "      AND ID <= @myMaxID;"
              ],
              "dataSource": "OLE-Monitor_MaintranceMonitoring"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>DECLARE @myMinID INT",
                  "DECLARE @myMaxID INT",
                  "SELECT @myMinID = MIN( Common_Date_OriginalBackupStartRef ),@myMaxID = MAX(Common_Date_OriginalBackupStartRef ) FROM MaintranceBackup.RestoreHistory WITH (READPAST) WHERE HasLastBackupRestoreForDR = 0",
                  "SELECT ID,",
                  "       ID * -1 AS ID_Sort_Desc,",
                  "       GregorianDate,",
                  "       PersianDate,",
                  "       PersianYearInt,",
                  "       PersianMonthNo,",
                  "       PersianDayInMonth,",
                  "       PersianDayOfWeekInt,",
                  "       PersianYearMonthInt,",
                  "       PersianYearMonthStr,",
                  "       PersianWeekOfMonthNo,",
                  "       PersianWeekOfYearNo,",
                  "       PersianSeasonInt,",
                  "       PersianMonthName,",
                  "       PersianDayOfWeekName,",
                  "       PersianWeekOfMonthName,",
                  "       PersianWeekOfYearName,",
                  "       PersianSeason",
                  "FROM [Common].[DimDate] WITH (READPAST)",
                  "WHERE ID >= @myMinID",
                  "      AND ID <= @myMaxID;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "DECLARE @myMinID INT",
              "DECLARE @myMaxID INT",
              "SELECT @myMinID = MIN( Common_Date_OriginalBackupStartRef ),@myMaxID = MAX(Common_Date_OriginalBackupStartRef ) FROM MaintranceBackup.RestoreHistory WITH (READPAST) WHERE HasLastBackupRestoreForDR = 0",
              "SELECT ID,",
              "       ID * -1 AS ID_Sort_Desc,",
              "       GregorianDate,",
              "       PersianDate,",
              "       PersianYearInt,",
              "       PersianMonthNo,",
              "       PersianDayInMonth,",
              "       PersianDayOfWeekInt,",
              "       PersianYearMonthInt,",
              "       PersianYearMonthStr,",
              "       PersianWeekOfMonthNo,",
              "       PersianWeekOfYearNo,",
              "       PersianSeasonInt,",
              "       PersianMonthName,",
              "       PersianDayOfWeekName,",
              "       PersianWeekOfMonthName,",
              "       PersianWeekOfYearName,",
              "       PersianSeason",
              "FROM [Common].[DimDate] WITH (READPAST)",
              "WHERE ID >= @myMinID",
              "      AND ID <= @myMaxID;"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "DimDate_Details_Backup"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>DECLARE @myMinID INT",
              "DECLARE @myMaxID INT",
              "SELECT @myMinID = MIN( Common_Date_OriginalBackupStartRef ),@myMaxID = MAX(Common_Date_OriginalBackupStartRef ) FROM MaintranceBackup.RestoreHistory WITH (READPAST) WHERE HasLastBackupRestoreForDR = 0",
              "SELECT ID,",
              "       ID * -1 AS ID_Sort_Desc,",
              "       GregorianDate,",
              "       PersianDate,",
              "       PersianYearInt,",
              "       PersianMonthNo,",
              "       PersianDayInMonth,",
              "       PersianDayOfWeekInt,",
              "       PersianYearMonthInt,",
              "       PersianYearMonthStr,",
              "       PersianWeekOfMonthNo,",
              "       PersianWeekOfYearNo,",
              "       PersianSeasonInt,",
              "       PersianMonthName,",
              "       PersianDayOfWeekName,",
              "       PersianWeekOfMonthName,",
              "       PersianWeekOfYearName,",
              "       PersianSeason",
              "FROM [Common].[DimDate] WITH (READPAST)",
              "WHERE ID >= @myMinID",
              "      AND ID <= @myMaxID;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "DimTime_Details_Backup",
        "columns": [
          {
            "name": "ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Hour24",
            "dataType": "int64",
            "sourceColumn": "Hour24",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Minute",
            "dataType": "int64",
            "sourceColumn": "Minute",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Second",
            "dataType": "int64",
            "sourceColumn": "Second",
            "sourceProviderType": "Integer"
          },
          {
            "name": "FullTimeString24",
            "dataType": "string",
            "sourceColumn": "FullTimeString24",
            "sourceProviderType": "Char"
          },
          {
            "name": "FullTime",
            "dataType": "dateTime",
            "sourceColumn": "FullTime",
            "formatString": "General Date",
            "sourceProviderType": "145"
          }
        ],
        "partitions": [
          {
            "name": "DimTime_Details_Backup",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "DECLARE @myMinID INT",
                "DECLARE @myMaxID INT",
                "SELECT @myMinID = MIN( Common_Time_OriginalBackupStartRef ),@myMaxID = MAX( Common_Time_OriginalBackupStartRef ) FROM MaintranceBackup.RestoreHistory WITH (READPAST) WHERE HasLastBackupRestoreForDR = 0",
                "SELECT ID,",
                "       Hour24,",
                "       Minute,",
                "       Second,",
                "       FullTimeString24,",
                "       FullTime",
                "FROM [Common].[DimTime] WITH (READPAST)",
                "WHERE ID >= @myMinID",
                "      AND ID <= @myMaxID;"
              ],
              "dataSource": "OLE-Monitor_MaintranceMonitoring"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>DECLARE @myMinID INT",
                  "DECLARE @myMaxID INT",
                  "SELECT @myMinID = MIN( Common_Time_OriginalBackupStartRef ),@myMaxID = MAX( Common_Time_OriginalBackupStartRef ) FROM MaintranceBackup.RestoreHistory WITH (READPAST) WHERE HasLastBackupRestoreForDR = 0",
                  "SELECT ID,",
                  "       Hour24,",
                  "       Minute,",
                  "       Second,",
                  "       FullTimeString24,",
                  "       FullTime",
                  "FROM [Common].[DimTime] WITH (READPAST)",
                  "WHERE ID >= @myMinID",
                  "      AND ID <= @myMaxID;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "DECLARE @myMinID INT",
              "DECLARE @myMaxID INT",
              "SELECT @myMinID = MIN( Common_Time_OriginalBackupStartRef ),@myMaxID = MAX( Common_Time_OriginalBackupStartRef ) FROM MaintranceBackup.RestoreHistory WITH (READPAST) WHERE HasLastBackupRestoreForDR = 0",
              "SELECT ID,",
              "       Hour24,",
              "       Minute,",
              "       Second,",
              "       FullTimeString24,",
              "       FullTime",
              "FROM [Common].[DimTime] WITH (READPAST)",
              "WHERE ID >= @myMinID",
              "      AND ID <= @myMaxID;"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "DimTime_Details_Backup"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>DECLARE @myMinID INT",
              "DECLARE @myMaxID INT",
              "SELECT @myMinID = MIN( Common_Time_OriginalBackupStartRef ),@myMaxID = MAX( Common_Time_OriginalBackupStartRef ) FROM MaintranceBackup.RestoreHistory WITH (READPAST) WHERE HasLastBackupRestoreForDR = 0",
              "SELECT ID,",
              "       Hour24,",
              "       Minute,",
              "       Second,",
              "       FullTimeString24,",
              "       FullTime",
              "FROM [Common].[DimTime] WITH (READPAST)",
              "WHERE ID >= @myMinID",
              "      AND ID <= @myMaxID;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "DimTime_Details_Restore",
        "columns": [
          {
            "name": "ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Hour24",
            "dataType": "int64",
            "sourceColumn": "Hour24",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Minute",
            "dataType": "int64",
            "sourceColumn": "Minute",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Second",
            "dataType": "int64",
            "sourceColumn": "Second",
            "sourceProviderType": "Integer"
          },
          {
            "name": "FullTimeString24",
            "dataType": "string",
            "sourceColumn": "FullTimeString24",
            "sourceProviderType": "Char"
          },
          {
            "name": "FullTime",
            "dataType": "dateTime",
            "sourceColumn": "FullTime",
            "formatString": "General Date",
            "sourceProviderType": "145"
          }
        ],
        "partitions": [
          {
            "name": "DimTime_Details_Restore",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "DECLARE @myMinID INT",
                "DECLARE @myMaxID INT",
                "SELECT @myMinID = MIN( Common_Time_RestoreRef ),@myMaxID = MAX( Common_Time_RestoreRef ) FROM MaintranceBackup.RestoreHistory WITH (READPAST) WHERE HasLastBackupRestoreForDR = 0",
                "SELECT ID,",
                "       Hour24,",
                "       Minute,",
                "       Second,",
                "       FullTimeString24,",
                "       FullTime",
                "FROM [Common].[DimTime] WITH (READPAST)",
                "WHERE ID >= @myMinID",
                "      AND ID <= @myMaxID;"
              ],
              "dataSource": "OLE-Monitor_MaintranceMonitoring"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>DECLARE @myMinID INT",
                  "DECLARE @myMaxID INT",
                  "SELECT @myMinID = MIN( Common_Time_RestoreRef ),@myMaxID = MAX( Common_Time_RestoreRef ) FROM MaintranceBackup.RestoreHistory WITH (READPAST) WHERE HasLastBackupRestoreForDR = 0",
                  "SELECT ID,",
                  "       Hour24,",
                  "       Minute,",
                  "       Second,",
                  "       FullTimeString24,",
                  "       FullTime",
                  "FROM [Common].[DimTime] WITH (READPAST)",
                  "WHERE ID >= @myMinID",
                  "      AND ID <= @myMaxID;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "DECLARE @myMinID INT",
              "DECLARE @myMaxID INT",
              "SELECT @myMinID = MIN( Common_Time_RestoreRef ),@myMaxID = MAX( Common_Time_RestoreRef ) FROM MaintranceBackup.RestoreHistory WITH (READPAST) WHERE HasLastBackupRestoreForDR = 0",
              "SELECT ID,",
              "       Hour24,",
              "       Minute,",
              "       Second,",
              "       FullTimeString24,",
              "       FullTime",
              "FROM [Common].[DimTime] WITH (READPAST)",
              "WHERE ID >= @myMinID",
              "      AND ID <= @myMaxID;"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "DimTime_Details_Restore"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>DECLARE @myMinID INT",
              "DECLARE @myMaxID INT",
              "SELECT @myMinID = MIN( Common_Time_RestoreRef ),@myMaxID = MAX( Common_Time_RestoreRef ) FROM MaintranceBackup.RestoreHistory WITH (READPAST) WHERE HasLastBackupRestoreForDR = 0",
              "SELECT ID,",
              "       Hour24,",
              "       Minute,",
              "       Second,",
              "       FullTimeString24,",
              "       FullTime",
              "FROM [Common].[DimTime] WITH (READPAST)",
              "WHERE ID >= @myMinID",
              "      AND ID <= @myMaxID;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "BackupType_Header",
        "columns": [
          {
            "name": "ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Caption",
            "dataType": "string",
            "sourceColumn": "Caption",
            "sourceProviderType": "WChar"
          }
        ],
        "partitions": [
          {
            "name": "BackupType_Header",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT ID,",
                "       Caption",
                "FROM [MaintranceBackup].[BackupType] WITH (READPAST);"
              ],
              "dataSource": "OLE-Monitor_MaintranceMonitoring"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ID,",
                  "       Caption",
                  "FROM [MaintranceBackup].[BackupType] WITH (READPAST);</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT ID,",
              "       Caption",
              "FROM [MaintranceBackup].[BackupType] WITH (READPAST);"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "BackupType"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "MaintranceBackup"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ID,",
              "       Caption",
              "FROM [MaintranceBackup].[BackupType] WITH (READPAST);</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "BackupType_Details",
        "columns": [
          {
            "name": "ID",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ID",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Caption",
            "dataType": "string",
            "sourceColumn": "Caption",
            "sourceProviderType": "WChar"
          }
        ],
        "partitions": [
          {
            "name": "BackupType_Details",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT ID,",
                "       Caption",
                "FROM [MaintranceBackup].[BackupType] WITH (READPAST);"
              ],
              "dataSource": "OLE-Monitor_MaintranceMonitoring"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ID,",
                  "       Caption",
                  "FROM [MaintranceBackup].[BackupType] WITH (READPAST);</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT ID,",
              "       Caption",
              "FROM [MaintranceBackup].[BackupType] WITH (READPAST);"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "BackupType"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "MaintranceBackup"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT ID,",
              "       Caption",
              "FROM [MaintranceBackup].[BackupType] WITH (READPAST);</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      },
      {
        "name": "System",
        "columns": [
          {
            "name": "RefreshDatetime",
            "dataType": "dateTime",
            "sourceColumn": "RefreshDatetime",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "PersianRefreshDatetime",
            "dataType": "string",
            "sourceColumn": "PersianRefreshDatetime",
            "sourceProviderType": "VarChar"
          },
          {
            "name": "RefreshDate",
            "dataType": "dateTime",
            "sourceColumn": "RefreshDate",
            "formatString": "General Date",
            "sourceProviderType": "Date"
          },
          {
            "name": "PersianRefreshDate",
            "dataType": "string",
            "sourceColumn": "PersianRefreshDate",
            "sourceProviderType": "VarChar"
          }
        ],
        "partitions": [
          {
            "name": "System",
            "dataView": "full",
            "source": {
              "type": "query",
              "query": [
                "SELECT GETDATE() AS RefreshDatetime,",
                "       FORMAT( GETDATE(), 'yyyy-MM-dd HH:mm:ss', 'fa-ir' ) AS PersianRefreshDatetime,",
                "       CAST(GETDATE() AS DATE) AS RefreshDate,",
                "       FORMAT( CAST(GETDATE() AS DATE), 'yyyy-MM-dd', 'fa-ir' ) AS PersianRefreshDate;"
              ],
              "dataSource": "OLE-Monitor_MaintranceMonitoring"
            },
            "annotations": [
              {
                "name": "QueryEditorSerialization",
                "value": [
                  "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT GETDATE() AS RefreshDatetime,",
                  "       FORMAT( GETDATE(), 'yyyy-MM-dd HH:mm:ss', 'fa-ir' ) AS PersianRefreshDatetime,",
                  "       CAST(GETDATE() AS DATE) AS RefreshDate,",
                  "       FORMAT( CAST(GETDATE() AS DATE), 'yyyy-MM-dd', 'fa-ir' ) AS PersianRefreshDate;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
                ]
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": [
              "SELECT GETDATE() AS RefreshDatetime,",
              "       FORMAT( GETDATE(), 'yyyy-MM-dd HH:mm:ss', 'fa-ir' ) AS PersianRefreshDatetime,",
              "       CAST(GETDATE() AS DATE) AS RefreshDate,",
              "       FORMAT( CAST(GETDATE() AS DATE), 'yyyy-MM-dd', 'fa-ir' ) AS PersianRefreshDate;"
            ]
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "System"
          },
          {
            "name": "QueryEditorSerialization",
            "value": [
              "<?xml version=\"1.0\" encoding=\"UTF-16\"?><Gemini xmlns=\"QueryEditorSerialization\"><AnnotationContent><![CDATA[<RSQueryCommandText>SELECT GETDATE() AS RefreshDatetime,",
              "       FORMAT( GETDATE(), 'yyyy-MM-dd HH:mm:ss', 'fa-ir' ) AS PersianRefreshDatetime,",
              "       CAST(GETDATE() AS DATE) AS RefreshDate,",
              "       FORMAT( CAST(GETDATE() AS DATE), 'yyyy-MM-dd', 'fa-ir' ) AS PersianRefreshDate;</RSQueryCommandText><RSQueryCommandType>Text</RSQueryCommandType><RSQueryDesignState></RSQueryDesignState>]]></AnnotationContent></Gemini>"
            ]
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "07754ab5-9cfd-43c8-b731-40489c89f027",
        "fromTable": "Branch",
        "fromColumn": "common_BranchTypeRef",
        "toTable": "BranchType",
        "toColumn": "ID"
      },
      {
        "name": "63bfc8fa-f816-45cc-a4c5-8ff7c45ee5ec",
        "fromTable": "RestoreHistory_Header",
        "fromColumn": "Common_BranchRef",
        "toTable": "Branch",
        "toColumn": "ID"
      },
      {
        "name": "ca204863-466a-4be8-a236-529baf127216",
        "fromTable": "RestoreHistory_Header",
        "fromColumn": "Common_Date_OriginalBackupStartRef",
        "toTable": "DimDate_Header_Backup",
        "toColumn": "ID"
      },
      {
        "name": "6f96d250-cb76-4b2d-a163-d7e81a3afa9c",
        "fromTable": "RestoreHistory_Header",
        "fromColumn": "Common_Date_RestoreRef",
        "toTable": "DimDate_Header_Restore",
        "toColumn": "ID"
      },
      {
        "name": "c73671c7-512f-4c62-b996-b620ca897ee6",
        "fromTable": "RestoreHistory_Header",
        "fromColumn": "Common_Time_OriginalBackupStartRef",
        "toTable": "DimTime_Header_Backup",
        "toColumn": "ID"
      },
      {
        "name": "80011de5-dd00-46bb-8032-2ad9acbbf92c",
        "fromTable": "RestoreHistory_Header",
        "fromColumn": "Common_Time_RestoreRef",
        "toTable": "DimTime_Header_Restore",
        "toColumn": "ID"
      },
      {
        "name": "9414227e-31af-4485-b88f-44bf9c1535d6",
        "fromTable": "RestoreHistory_Details",
        "fromColumn": "BranchRestoreDatabase",
        "toTable": "RestoreHistory_Header",
        "toColumn": "BranchRestoreDatabase"
      },
      {
        "name": "279b666f-c631-4eba-a00e-18faaa599897",
        "fromTable": "RestoreHistory_Details",
        "fromColumn": "Common_Date_OriginalBackupStartRef",
        "toTable": "DimDate_Details_Backup",
        "toColumn": "ID"
      },
      {
        "name": "e040bb43-5ab1-4e9a-826a-6e26f7b1d9a7",
        "fromTable": "RestoreHistory_Details",
        "fromColumn": "Common_Date_RestoreRef",
        "toTable": "DimDate_Details_Restore",
        "toColumn": "ID"
      },
      {
        "name": "8908b873-b92c-406f-a4d1-0b7d55334467",
        "fromTable": "RestoreHistory_Details",
        "fromColumn": "Common_Time_OriginalBackupStartRef",
        "toTable": "DimTime_Details_Backup",
        "toColumn": "ID"
      },
      {
        "name": "fb5a71fc-144b-4879-834f-6bf217bf71a2",
        "fromTable": "RestoreHistory_Details",
        "fromColumn": "Common_Time_RestoreRef",
        "toTable": "DimTime_Details_Restore",
        "toColumn": "ID"
      },
      {
        "name": "7457bbf6-bb5c-447d-af4b-19b95f6a81de",
        "fromTable": "RestoreHistory_Header",
        "fromColumn": "MaintranceBackup_OriginalBackupTypeRef",
        "toTable": "BackupType_Header",
        "toColumn": "ID"
      },
      {
        "name": "c404719c-2c56-4ef3-8d5c-6160ca9d17d8",
        "fromTable": "RestoreHistory_Details",
        "fromColumn": "MaintranceBackup_OriginalBackupTypeRef",
        "toTable": "BackupType_Details",
        "toColumn": "ID"
      }
    ],
    "roles": [
      {
        "name": "Read_ALL",
        "modelPermission": "read",
        "members": [
        ]
      }
    ],
    "annotations": [
      {
        "name": "ClientCompatibilityLevel",
        "value": "400"
      }
    ]
  },
  "id": "SemanticModel"
}